{"version":3,"file":"sf2.synth.esm.js","sources":["../../src/SynthesizerNote.ts","../../src/Stream.ts","../../src/RiffParser.ts","../../src/Constants.ts","../../src/Structs.ts","../../src/Parser.ts","../../src/SoundFont.ts","../../src/Synthesizer.ts","../../src/ProgramNames.ts","../../src/View.ts","../../src/MidiMessageHandler.ts","../../src/delegateProxy.ts","../../src/WebMidiLink.ts"],"sourcesContent":["import { NoteInfo } from \"./SoundFont\"\r\n//import { Instrument } from \"./Structs\";\r\n\r\nexport interface InstrumentState {\r\n  channel: number\r\n  key: number\r\n  volume: number\r\n  panpot: number\r\n  velocity: number\r\n  pitchBend: number\r\n  pitchBendSensitivity: number\r\n  expression: number\r\n  mute: boolean\r\n  releaseTime: number\r\n  cutOffFrequency: number\r\n  harmonicContent: number\r\n}\r\n\r\nexport default class SynthesizerNote {\r\n\r\n  //---------------------------------------------------------------------------\r\n  // audio node\r\n  //---------------------------------------------------------------------------\r\n\r\n  audioBuffer: AudioBuffer\r\n  bufferSource: AudioBufferSourceNode\r\n  panner: PannerNode\r\n  expressionGain: GainNode\r\n  gainOutput: GainNode\r\n  ctx: AudioContext\r\n  destination: AudioNode\r\n  filter: BiquadFilterNode\r\n  modulator: BiquadFilterNode\r\n  noteInfo: NoteInfo\r\n  instrument: InstrumentState\r\n  channel: number\r\n  key: number\r\n  velocity: number\r\n  playbackRate: number\r\n  volume: number\r\n  panpot: number\r\n  pitchBend: number\r\n  pitchBendSensitivity: number\r\n  modEnvToPitch: number\r\n  expression: number\r\n\r\n  // state\r\n  startTime: number\r\n  computedPlaybackRate: number\r\n  noteOffState: boolean\r\n  sampleModes: number\r\n\r\n  constructor(ctx: AudioContext, destination: AudioNode, noteInfo: NoteInfo, instrument: InstrumentState) {\r\n    this.ctx = ctx\r\n    this.destination = destination\r\n    this.noteInfo = noteInfo\r\n    this.playbackRate = noteInfo.playbackRate(instrument.key)\r\n    this.instrument = instrument\r\n    this.channel = instrument.channel\r\n    this.key = instrument.key\r\n    this.velocity = instrument.velocity\r\n    this.volume = instrument.volume\r\n    this.panpot = instrument.panpot\r\n    this.pitchBend = instrument.pitchBend\r\n    this.expression = instrument.expression\r\n    this.pitchBendSensitivity = instrument.pitchBendSensitivity\r\n    this.startTime = ctx.currentTime\r\n    this.computedPlaybackRate = this.playbackRate\r\n  }\r\n\r\n  noteOn() {\r\n    const { ctx, noteInfo } = this\r\n\r\n    const sample = noteInfo.sample.subarray(0, noteInfo.sample.length + noteInfo.end)\r\n    this.audioBuffer = ctx.createBuffer(1, sample.length, noteInfo.sampleRate)\r\n\r\n    const channelData = this.audioBuffer.getChannelData(0)\r\n    channelData.set(sample)\r\n\r\n    // buffer source\r\n    const bufferSource = ctx.createBufferSource()\r\n    bufferSource.buffer = this.audioBuffer\r\n    bufferSource.loop = this.sampleModes !== 0;\r\n    bufferSource.loopStart = noteInfo.loopStart / noteInfo.sampleRate\r\n    bufferSource.loopEnd = noteInfo.loopEnd / noteInfo.sampleRate\r\n    bufferSource.onended = () => this.disconnect()\r\n    this.bufferSource = bufferSource\r\n    this.updatePitchBend(this.pitchBend)\r\n\r\n    // audio node\r\n    const output = this.gainOutput = ctx.createGain()\r\n    const outputGain = output.gain\r\n\r\n    // expression\r\n    this.expressionGain = ctx.createGain();\r\n    //this.expressionGain.gain.value = this.expression / 127;\r\n    this.expressionGain.gain.setTargetAtTime(this.expression / 127, this.ctx.currentTime, 0.015);\r\n\r\n    // Modulator\r\n    const modulator = this.modulator = ctx.createBiquadFilter();\r\n\r\n    // filter\r\n    const filter = ctx.createBiquadFilter()\r\n    filter.type = \"lowpass\"\r\n    this.filter = filter\r\n\r\n    // panpot\r\n    // TODO: ドラムパートのPanが変化した場合、その計算をしなければならない\r\n    // http://cpansearch.perl.org/src/PJB/MIDI-SoundFont-1.08/doc/sfspec21.html#8.4.6\r\n    const pan = noteInfo.pan ? noteInfo.pan / 120 : this.panpot;\r\n    const panner = this.panner = ctx.createPanner()\r\n    panner.panningModel = \"equalpower\"\r\n    panner.setPosition(\r\n      Math.sin(pan * Math.PI / 2),\r\n      0,\r\n      Math.cos(pan * Math.PI / 2)\r\n    )\r\n\r\n    //---------------------------------------------------------------------------\r\n    // Delay, Attack, Hold, Decay, Sustain\r\n    //---------------------------------------------------------------------------\r\n    let attackVolume = this.volume * (this.velocity / 127) * (1 - noteInfo.initialAttenuation / 1000);\r\n    if (attackVolume < 0) {\r\n      attackVolume = 0;\r\n    }\r\n\r\n    const now = this.ctx.currentTime\r\n\r\n    const volDelay = now + noteInfo.volDelay;\r\n    const volAttack = volDelay + noteInfo.volAttack;\r\n    const volHold = volAttack + noteInfo.volHold;\r\n    const volDecay = volHold + noteInfo.volDecay;\r\n    const modDelay = now + noteInfo.modDelay;\r\n    const modAttack = volDelay + noteInfo.modAttack;\r\n    const modHold = modAttack + noteInfo.modHold;\r\n    const modDecay = modHold + noteInfo.modDecay;\r\n\r\n    const startTime = noteInfo.start / noteInfo.sampleRate\r\n\r\n    // volume envelope\r\n    outputGain\r\n      .setValueAtTime(0, now)\r\n      .setValueAtTime(0, volDelay)\r\n      .setTargetAtTime(attackVolume, volDelay, noteInfo.volAttack)\r\n      .setValueAtTime(attackVolume, volHold)\r\n      .linearRampToValueAtTime(attackVolume * (1 - noteInfo.volSustain), volDecay);\r\n\r\n    // modulation envelope\r\n    const baseFreq = this.amountToFreq(noteInfo.initialFilterFc);\r\n    const peekFreq = this.amountToFreq(noteInfo.initialFilterFc + noteInfo.modEnvToFilterFc);\r\n    const sustainFreq = baseFreq + (peekFreq - baseFreq) * (1 - noteInfo.modSustain);\r\n\r\n    modulator.Q.setValueAtTime(Math.pow(10, noteInfo.initialFilterQ / 200), now);\r\n    //modulator.frequency.value = baseFreq;\r\n    modulator.frequency.setTargetAtTime(baseFreq, this.ctx.currentTime, 0.015);\r\n    modulator.type = 'lowpass';\r\n    modulator.frequency\r\n      .setValueAtTime(baseFreq, now)\r\n      .setValueAtTime(baseFreq, modDelay)\r\n      .setTargetAtTime(peekFreq, modDelay, noteInfo.modAttack++) // For FireFox fix\r\n      .setValueAtTime(peekFreq, modHold)\r\n      .linearRampToValueAtTime(sustainFreq, modDecay);\r\n\r\n    // connect\r\n    bufferSource.connect(modulator);\r\n    modulator.connect(panner);\r\n    panner.connect(this.expressionGain);\r\n    this.expressionGain.connect(output);\r\n\r\n    if (!noteInfo.mute) {\r\n      this.gainOutput.connect(this.destination);\r\n    }\r\n\r\n    // fire\r\n    bufferSource.start(0, startTime)\r\n  }\r\n\r\n  amountToFreq(val: number): number {\r\n    return Math.pow(2, (val - 6900) / 1200) * 440\r\n  }\r\n\r\n  noteOff() {\r\n    const { noteInfo, bufferSource } = this\r\n    const output = this.gainOutput\r\n    const now = this.ctx.currentTime\r\n    const release = noteInfo.releaseTime - 64;\r\n\r\n    //---------------------------------------------------------------------------\r\n    // volume release time\r\n    //---------------------------------------------------------------------------\r\n    const volEndTimeTmp = noteInfo.volRelease * output.gain.value;\r\n    const volEndTime = now + (volEndTimeTmp * (1 + release / (release < 0 ? 64 : 63)));\r\n\r\n    //---------------------------------------------------------------------------\r\n    // modulation release time\r\n    //---------------------------------------------------------------------------\r\n    const modulator = this.modulator;\r\n    const baseFreq = this.amountToFreq(noteInfo.initialFilterFc);\r\n    const peekFreq = this.amountToFreq(noteInfo.initialFilterFc + noteInfo.modEnvToFilterFc);\r\n    const modEndTime = now + noteInfo.modRelease *\r\n      (\r\n        baseFreq === peekFreq ?\r\n          1 :\r\n          (modulator.frequency.value - baseFreq) / (peekFreq - baseFreq)\r\n      );\r\n\r\n    //---------------------------------------------------------------------------\r\n    // Release\r\n    //---------------------------------------------------------------------------\r\n    switch (noteInfo.sampleModes) {\r\n      case 0:\r\n        break;\r\n      case 1:\r\n        output.gain.cancelScheduledValues(0);\r\n        output.gain.setValueAtTime(output.gain.value, now);\r\n        output.gain.linearRampToValueAtTime(0, volEndTime);\r\n\r\n        modulator.frequency.cancelScheduledValues(0);\r\n        modulator.frequency.setValueAtTime(modulator.frequency.value, now);\r\n        modulator.frequency.linearRampToValueAtTime(baseFreq, modEndTime);\r\n\r\n        bufferSource.playbackRate.cancelScheduledValues(0);\r\n        bufferSource.playbackRate.setValueAtTime(bufferSource.playbackRate.value, now);\r\n        bufferSource.playbackRate.linearRampToValueAtTime(this.computedPlaybackRate, modEndTime);\r\n\r\n        bufferSource.stop(volEndTime);\r\n        break;\r\n      case 2:\r\n        console.log('detect unused sampleModes');\r\n        break;\r\n      case 3:\r\n        bufferSource.loop = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    this.gainOutput.disconnect(0)\r\n  }\r\n\r\n  schedulePlaybackRate() {\r\n    const { noteInfo } = this\r\n    const playbackRate = this.bufferSource.playbackRate\r\n    const computed = this.computedPlaybackRate\r\n    const start = this.startTime\r\n    const modAttack = start + noteInfo.modAttack\r\n    const modDecay = modAttack + noteInfo.modDecay\r\n    const peekPitch = computed * Math.pow(\r\n      Math.pow(2, 1 / 12),\r\n      noteInfo.modEnvToPitch * noteInfo.scaleTuning\r\n    )\r\n\r\n    playbackRate.cancelScheduledValues(0)\r\n    playbackRate.setValueAtTime(computed, start)\r\n    playbackRate.linearRampToValueAtTime(peekPitch, modAttack)\r\n    playbackRate.linearRampToValueAtTime(computed + (peekPitch - computed) * (1 - noteInfo.modSustain), modDecay)\r\n  }\r\n\r\n  updateExpression(expression: number) {\r\n    this.expressionGain.gain.value = (this.expression = expression) / 127;\r\n  };\r\n\r\n  updatePitchBend(pitchBend: number) {\r\n    this.computedPlaybackRate = this.playbackRate * Math.pow(\r\n      Math.pow(2, 1 / 12),\r\n      (\r\n        this.pitchBendSensitivity * (\r\n          pitchBend / (pitchBend < 0 ? 8192 : 8191)\r\n        )\r\n      ) * this.noteInfo.scaleTuning\r\n    )\r\n    this.schedulePlaybackRate()\r\n  }\r\n}\r\n","export default class Stream {\r\n  private data: Uint8Array\r\n  ip: number\r\n\r\n  constructor(data, offset) {\r\n    this.data = data\r\n    this.ip = offset\r\n  }\r\n\r\n  readString(size: number): string {\r\n    const str = String.fromCharCode.apply(null, this.data.subarray(this.ip, this.ip += size))\r\n    const nullLocation = str.indexOf(\"\\u0000\")\r\n    if (nullLocation > 0) {\r\n      return str.substr(0, nullLocation)\r\n    }\r\n    return str\r\n  }\r\n\r\n  readWORD(): number {\r\n    return this.data[this.ip++] | (this.data[this.ip++] << 8)\r\n  }\r\n\r\n  readDWORD(bigEndian: boolean = false): number {\r\n    if (bigEndian) {\r\n      return (\r\n        (this.data[this.ip++] << 24)| \r\n        (this.data[this.ip++] << 16) | \r\n        (this.data[this.ip++] << 8) | \r\n        (this.data[this.ip++])\r\n      ) >>> 0\r\n    } else {\r\n      return (\r\n        this.data[this.ip++] | \r\n        (this.data[this.ip++] << 8) | \r\n        (this.data[this.ip++] << 16) | \r\n        (this.data[this.ip++] << 24)\r\n      ) >>> 0\r\n    }\r\n  }\r\n\r\n  readByte() {\r\n    return this.data[this.ip++]\r\n  }\r\n\r\n  readAt(offset: number) {\r\n    return this.data[this.ip + offset]\r\n  }\r\n\r\n  /* helper */\r\n\r\n  readUInt8() {\r\n    return this.readByte()\r\n  }\r\n  \r\n  readInt8() {\r\n    return (this.readByte() << 24) >> 24\r\n  }\r\n  \r\n  readUInt16() {\r\n    return this.readWORD()\r\n  }\r\n\r\n  readInt16() {\r\n    return (this.readWORD() << 16) >> 16\r\n  }\r\n\r\n  readUInt32() {\r\n    return this.readDWORD()\r\n  }\r\n}\r\n","import Stream from \"./Stream\"\r\n\r\nfunction parseChunk(input: Uint8Array, ip: number, bigEndian: boolean): Chunk {\r\n  const stream = new Stream(input, ip)\r\n  const type = stream.readString(4)\r\n  const size = stream.readDWORD(bigEndian)\r\n  return new Chunk(type, size, stream.ip)\r\n}\r\n\r\nexport interface Options {\r\n  padding?: boolean,\r\n  bigEndian?: boolean\r\n}\r\n\r\nexport function parseRiff(input: Uint8Array, index: number = 0, length: number, { padding = true, bigEndian = false }: Options = {}) {\r\n  const chunkList: Chunk[] = []\r\n  const end = length + index\r\n  let ip = index\r\n\r\n  while (ip < end) {\r\n    const chunk = parseChunk(input, ip, bigEndian)\r\n    ip = chunk.offset + chunk.size\r\n    \r\n    // padding\r\n    if (padding && ((ip - index) & 1) === 1) {\r\n      ip++\r\n    }\r\n    \r\n    chunkList.push(chunk)\r\n  }\r\n\r\n  return chunkList\r\n}\r\n\r\nexport class Chunk {\r\n  type: string\r\n  size: number\r\n  offset: number\r\n\r\n  constructor(type: string, size: number, offset: number) {\r\n    this.type = type\r\n    this.size = size\r\n    this.offset = offset\r\n  }\r\n}\r\n","export const GeneratorEnumeratorTable = [\r\n  'startAddrsOffset',\r\n  'endAddrsOffset',\r\n  'startloopAddrsOffset',\r\n  'endloopAddrsOffset',\r\n  'startAddrsCoarseOffset',\r\n  'modLfoToPitch',\r\n  'vibLfoToPitch',\r\n  'modEnvToPitch',\r\n  'initialFilterFc',\r\n  'initialFilterQ',\r\n  'modLfoToFilterFc',\r\n  'modEnvToFilterFc',\r\n  'endAddrsCoarseOffset',\r\n  'modLfoToVolume',\r\n  undefined, // 14\r\n  'chorusEffectsSend',\r\n  'reverbEffectsSend',\r\n  'pan',\r\n  undefined,undefined,undefined, // 18,19,20\r\n  'delayModLFO',\r\n  'freqModLFO',\r\n  'delayVibLFO',\r\n  'freqVibLFO',\r\n  'delayModEnv',\r\n  'attackModEnv',\r\n  'holdModEnv',\r\n  'decayModEnv',\r\n  'sustainModEnv',\r\n  'releaseModEnv',\r\n  'keynumToModEnvHold',\r\n  'keynumToModEnvDecay',\r\n  'delayVolEnv',\r\n  'attackVolEnv',\r\n  'holdVolEnv',\r\n  'decayVolEnv',\r\n  'sustainVolEnv',\r\n  'releaseVolEnv',\r\n  'keynumToVolEnvHold',\r\n  'keynumToVolEnvDecay',\r\n  'instrument',\r\n  undefined, // 42\r\n  'keyRange',\r\n  'velRange',\r\n  'startloopAddrsCoarseOffset',\r\n  'keynum',\r\n  'velocity',\r\n  'initialAttenuation',\r\n  undefined, // 49\r\n  'endloopAddrsCoarseOffset',\r\n  'coarseTune',\r\n  'fineTune',\r\n  'sampleID',\r\n  'sampleModes',\r\n  undefined, // 55\r\n  'scaleTuning',\r\n  'exclusiveClass',\r\n  'overridingRootKey'\r\n]\r\n","import { GeneratorEnumeratorTable } from \"./Constants\"\r\nimport Stream from \"./Stream\"\r\nimport { Chunk } from \"./RiffParser\"\r\n\r\nexport class VersionTag {\r\n  major: number\r\n  minor: number\r\n  \r\n  static parse(stream: Stream) {\r\n    const v = new VersionTag()\r\n    v.major = stream.readInt8()\r\n    v.minor = stream.readInt8()\r\n    return v\r\n  }\r\n}\r\n\r\nexport class Info {\r\n  comment: string|null\r\n  copyright: string|null\r\n  creationDate: string|null\r\n  engineer: string|null\r\n  name: string\r\n  product: string|null\r\n  software: string|null\r\n  version: VersionTag\r\n  soundEngine: string|null\r\n  romName: string|null\r\n  romVersion: VersionTag|null\r\n\r\n  // LIST - INFO の全ての chunk\r\n  static parse(data: Uint8Array, chunks: Chunk[]) {\r\n    function getChunk(type) {\r\n      return chunks.find(c => c.type === type) \r\n    }\r\n\r\n    function toStream(chunk) {\r\n      return new Stream(data, chunk.offset)\r\n    }\r\n\r\n    function readString(type) {\r\n      const chunk = getChunk(type)\r\n      if (!chunk) {\r\n        return null\r\n      }\r\n      return toStream(chunk)!.readString(chunk.size)\r\n    }\r\n\r\n    function readVersionTag(type) {\r\n      const chunk = getChunk(type)\r\n      if (!chunk) {\r\n        return null\r\n      }\r\n      return VersionTag.parse(toStream(chunk))\r\n    }\r\n    \r\n    const info = new Info()\r\n    info.comment = readString(\"ICMT\")\r\n    info.copyright = readString(\"ICOP\")\r\n    info.creationDate = readString(\"ICRD\")\r\n    info.engineer = readString(\"IENG\")\r\n    info.name = readString(\"INAM\")!\r\n    info.product = readString(\"IPRD\")\r\n    info.software = readString(\"ISFT\")\r\n    info.version = readVersionTag(\"ifil\")!\r\n    info.soundEngine = readString(\"isng\")\r\n    info.romName = readString(\"irom\")\r\n    info.romVersion = readVersionTag(\"iver\")\r\n    return info\r\n  }\r\n}\r\n\r\nexport class PresetHeader {\r\n  presetName: string\r\n  preset: number\r\n  bank: number\r\n  presetBagIndex: number\r\n  library: number\r\n  genre: number\r\n  morphology: number\r\n\r\n  get isEnd() {\r\n    return this.presetName === \"EOP\"\r\n  }\r\n\r\n  static parse(stream: Stream) {\r\n    const p = new PresetHeader()\r\n    p.presetName = stream.readString(20)\r\n    p.preset = stream.readWORD()\r\n    p.bank = stream.readWORD()\r\n    p.presetBagIndex = stream.readWORD()\r\n    p.library = stream.readDWORD()\r\n    p.genre = stream.readDWORD()\r\n    p.morphology = stream.readDWORD()\r\n    return p\r\n  }\r\n}\r\n\r\nexport class PresetBag {\r\n  presetGeneratorIndex: number\r\n  presetModulatorIndex: number\r\n\r\n  static parse(stream: Stream) {\r\n    const p = new PresetBag()\r\n    p.presetGeneratorIndex = stream.readWORD()\r\n    p.presetModulatorIndex = stream.readWORD()\r\n    return p\r\n  }\r\n}\r\n\r\nexport class RangeValue {\r\n  lo: number\r\n  hi: number\r\n\r\n  constructor(lo: number, hi: number) {\r\n    this.lo = lo\r\n    this.hi = hi\r\n  }\r\n\r\n  static parse(stream: Stream) {\r\n    return new RangeValue(\r\n      stream.readByte(), \r\n      stream.readByte()\r\n    )\r\n  }\r\n}\r\n\r\nexport class ModulatorList {\r\n  sourceOper: number\r\n  destinationOper: number\r\n  value: number|RangeValue\r\n  amountSourceOper: number\r\n  transOper: number\r\n\r\n  get type() {\r\n    return GeneratorEnumeratorTable[this.destinationOper]\r\n  }\r\n\r\n  get isEnd() {\r\n    return this.sourceOper === 0 && \r\n      this.destinationOper === 0 &&\r\n      this.value === 0 &&\r\n      this.amountSourceOper === 0 &&\r\n      this. transOper === 0\r\n  }\r\n\r\n  static parse(stream: Stream) {\r\n    const t = new ModulatorList()\r\n\r\n    t.sourceOper = stream.readWORD()\r\n    t.destinationOper = stream.readWORD()\r\n\r\n    switch (t.type) {\r\n      case 'keyRange': /* FALLTHROUGH */\r\n      case 'velRange': /* FALLTHROUGH */\r\n      case 'keynum': /* FALLTHROUGH */\r\n      case 'velocity':\r\n        t.value = RangeValue.parse(stream)\r\n        break\r\n      default:\r\n        t.value = stream.readInt16()\r\n        break\r\n    }\r\n    \r\n    t.amountSourceOper = stream.readWORD()\r\n    t.transOper = stream.readWORD()\r\n\r\n    return t\r\n  }\r\n}\r\n\r\nexport class GeneratorList {\r\n  code: number\r\n  value: number|RangeValue\r\n\r\n  get type() {\r\n    return GeneratorEnumeratorTable[this.code]\r\n  }\r\n\r\n  get isEnd() {\r\n    return this.code === 0 &&\r\n      this.value === 0\r\n  }\r\n\r\n  static parse(stream: Stream) {\r\n    const t = new GeneratorList()\r\n    t.code = stream.readWORD()\r\n\r\n    switch (t.type) {\r\n      case 'keynum': /* FALLTHROUGH */\r\n      case 'keyRange': /* FALLTHROUGH */\r\n      case 'velRange': /* FALLTHROUGH */\r\n      case 'velocity':\r\n        t.value = RangeValue.parse(stream)\r\n        break\r\n      default:\r\n        t.value = stream.readInt16()\r\n        break\r\n    }\r\n\r\n    return t\r\n  }\r\n}\r\n\r\nexport class Instrument {\r\n  instrumentName: string\r\n  instrumentBagIndex: number\r\n\r\n  get isEnd() {\r\n    return this.instrumentName === \"EOI\"\r\n  }\r\n  \r\n  static parse(stream: Stream) {\r\n    const t = new Instrument()\r\n    t.instrumentName = stream.readString(20)\r\n    t.instrumentBagIndex = stream.readWORD()\r\n    return t\r\n  }\r\n}\r\n\r\nexport class InstrumentBag {\r\n  instrumentGeneratorIndex: number\r\n  instrumentModulatorIndex: number\r\n  \r\n  static parse(stream: Stream) {\r\n    const t = new InstrumentBag()\r\n    t.instrumentGeneratorIndex = stream.readWORD()\r\n    t.instrumentModulatorIndex = stream.readWORD()\r\n    return t\r\n  }\r\n}\r\n\r\nexport class SampleHeader {\r\n  sampleName: string\r\n  start: number\r\n  end: number\r\n  loopStart: number\r\n  loopEnd: number\r\n  sampleRate: number\r\n  originalPitch: number\r\n  pitchCorrection: number\r\n  sampleLink: number\r\n  sampleType: number\r\n\r\n  get isEnd() {\r\n    return this.sampleName === \"EOS\"\r\n  }\r\n\r\n  static parse(stream: Stream) {\r\n    const s = new SampleHeader()\r\n\r\n    s.sampleName = stream.readString(20)\r\n    s.start = stream.readDWORD()\r\n    s.end = stream.readDWORD()\r\n    s.loopStart = stream.readDWORD()\r\n    s.loopEnd = stream.readDWORD()\r\n    s.sampleRate = stream.readDWORD()\r\n    s.originalPitch = stream.readByte()\r\n    s.pitchCorrection = stream.readInt8()\r\n    s.sampleLink = stream.readWORD()\r\n    s.sampleType = stream.readWORD()\r\n\r\n    s.loopStart -= s.start\r\n    s.loopEnd -= s.start\r\n\r\n    return s\r\n  }\r\n}\r\n\r\nexport const SampleLink = {\r\n  monoSample: 1,\r\n  rightSample: 2,\r\n  leftSample: 4,\r\n  linkedSample: 8,\r\n  RomMonoSample: 0x8001,\r\n  RomRightSample: 0x8002,\r\n  RomLeftSample: 0x8004,\r\n  RomLinkedSample: 0x8008\r\n}\r\n","import { parseRiff, Chunk, Options as RiffParserOptions } from \"./RiffParser\"\r\nimport { PresetHeader, SampleHeader, PresetBag, Instrument, InstrumentBag, ModulatorList, GeneratorList, Info } from \"./Structs\"\r\nimport Stream from \"./Stream\"\r\n\r\nexport interface ParseResult {\r\n  presetHeaders: PresetHeader[]\r\n  presetZone: PresetBag[]\r\n  presetModulators: ModulatorList[]\r\n  presetGenerators: GeneratorList[]\r\n  instruments: Instrument[]\r\n  instrumentZone: InstrumentBag[]\r\n  instrumentModulators: ModulatorList[]\r\n  instrumentGenerators: GeneratorList[]\r\n  sampleHeaders: SampleHeader[]\r\n  samples: Int16Array[]\r\n  samplingData: Chunk\r\n  info: Info\r\n}\r\n\r\nexport default function parse(input: Uint8Array, option: RiffParserOptions = {}): ParseResult {\r\n\r\n  // parse RIFF chunk\r\n  const chunkList = parseRiff(input, 0, input.length, option)\r\n\r\n  if (chunkList.length !== 1) {\r\n    throw new Error('wrong chunk length')\r\n  }\r\n\r\n  const chunk = chunkList[0]\r\n  if (chunk === null) {\r\n    throw new Error('chunk not found')\r\n  }\r\n\r\n  function parseRiffChunk(chunk: Chunk, data: Uint8Array) {\r\n    const chunkList = getChunkList(chunk, data, \"RIFF\", \"sfbk\")\r\n\r\n    if (chunkList.length !== 3) {\r\n      throw new Error('invalid sfbk structure')\r\n    }\r\n\r\n    return {\r\n      // INFO-list\r\n      info: parseInfoList(chunkList[0], data),\r\n\r\n      // sdta-list\r\n      samplingData: parseSdtaList(chunkList[1], data),\r\n\r\n      // pdta-list\r\n      ...parsePdtaList(chunkList[2], data)\r\n    }\r\n  }\r\n\r\n  function parsePdtaList(chunk: Chunk, data: Uint8Array) {\r\n    const chunkList = getChunkList(chunk, data, \"LIST\", \"pdta\")\r\n\r\n    // check number of chunks\r\n    if (chunkList.length !== 9) {\r\n      throw new Error('invalid pdta chunk')\r\n    }\r\n\r\n    return {\r\n      presetHeaders: parsePhdr(chunkList[0], data),\r\n      presetZone: parsePbag(chunkList[1], data),\r\n      presetModulators: parsePmod(chunkList[2], data),\r\n      presetGenerators: parsePgen(chunkList[3], data),\r\n      instruments: parseInst(chunkList[4], data),\r\n      instrumentZone: parseIbag(chunkList[5], data),\r\n      instrumentModulators: parseImod(chunkList[6], data),\r\n      instrumentGenerators: parseIgen(chunkList[7], data),\r\n      sampleHeaders: parseShdr(chunkList[8], data)\r\n    }\r\n  }\r\n\r\n  const result = parseRiffChunk(chunk, input)\r\n\r\n  return {\r\n    ...result,\r\n    samples: loadSample(result.sampleHeaders, result.samplingData.offset, input)\r\n  }\r\n}\r\n\r\nfunction getChunkList(chunk, data, expectedType, expectedSignature) {\r\n  // check parse target\r\n  if (chunk.type !== expectedType) {\r\n    throw new Error('invalid chunk type:' + chunk.type)\r\n  }\r\n\r\n  const stream = new Stream(data, chunk.offset)\r\n\r\n  // check signature\r\n  const signature = stream.readString(4)\r\n  if (signature !== expectedSignature) {\r\n    throw new Error('invalid signature:' + signature)\r\n  }\r\n\r\n  // read structure\r\n  return parseRiff(data, stream.ip, chunk.size - 4)\r\n}\r\n\r\nfunction parseInfoList(chunk: Chunk, data: Uint8Array) {\r\n  const chunkList = getChunkList(chunk, data, \"LIST\", \"INFO\")\r\n  return Info.parse(data, chunkList)\r\n}\r\n\r\nfunction parseSdtaList(chunk: Chunk, data: Uint8Array): Chunk {\r\n  const chunkList = getChunkList(chunk, data, \"LIST\", \"sdta\")\r\n\r\n  if (chunkList.length !== 1) {\r\n    throw new Error('TODO')\r\n  }\r\n\r\n  return chunkList[0]\r\n}\r\n\r\nfunction parseChunk<T>(chunk: Chunk, data: Uint8Array, type: string, clazz: { parse: (stream: Stream) => T }, terminate?: (obj: T) => boolean): T[] {\r\n  const result: T[] = []\r\n\r\n  if (chunk.type !== type) {\r\n    throw new Error('invalid chunk type:'  + chunk.type)\r\n  }\r\n  \r\n  const stream = new Stream(data, chunk.offset)\r\n  const size = chunk.offset + chunk.size\r\n  \r\n  while (stream.ip < size) {\r\n    const obj = clazz.parse(stream)\r\n    if (terminate && terminate(obj)) {\r\n      break\r\n    }\r\n    result.push(obj)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nconst parsePhdr = (chunk, data) => parseChunk(chunk, data, \"phdr\", PresetHeader, p => p.isEnd)\r\nconst parsePbag = (chunk, data) => parseChunk(chunk, data, \"pbag\", PresetBag)\r\nconst parseInst = (chunk, data) => parseChunk(chunk, data, \"inst\", Instrument, i => i.isEnd)\r\nconst parseIbag = (chunk, data) => parseChunk(chunk, data, \"ibag\", InstrumentBag)\r\nconst parsePmod = (chunk, data) => parseChunk(chunk, data, \"pmod\", ModulatorList, m => m.isEnd)\r\nconst parseImod = (chunk, data) => parseChunk(chunk, data, \"imod\", ModulatorList, m => m.isEnd)\r\nconst parsePgen = (chunk, data) => parseChunk(chunk, data, \"pgen\", GeneratorList, g => g.isEnd)\r\nconst parseIgen = (chunk, data) => parseChunk(chunk, data, \"igen\", GeneratorList, g => g.isEnd)\r\nconst parseShdr = (chunk, data) => parseChunk(chunk, data, \"shdr\", SampleHeader, s => s.isEnd)\r\n\r\nfunction adjustSampleData(sample, sampleRate) {\r\n  let multiply = 1\r\n\r\n  // buffer\r\n  while (sampleRate < 22050) {\r\n    const newSample = new Int16Array(sample.length * 2)\r\n    for (let i = 0, j = 0, il = sample.length; i < il; ++i) {\r\n      newSample[j++] = sample[i]\r\n      newSample[j++] = sample[i]\r\n    }\r\n    sample = newSample\r\n    multiply *= 2\r\n    sampleRate *= 2\r\n  }\r\n\r\n  return {\r\n    sample,\r\n    multiply\r\n  }\r\n}\r\n\r\nfunction loadSample(sampleHeader: SampleHeader[], samplingDataOffset: number, data: Uint8Array): Int16Array[] {\r\n  return sampleHeader.map(header => {\r\n    let sample = new Int16Array(new Uint8Array(data.subarray(\r\n      samplingDataOffset + header.start * 2,\r\n      samplingDataOffset + header.end   * 2\r\n    )).buffer)\r\n    if (header.sampleRate > 0) {\r\n      const adjust = adjustSampleData(sample, header.sampleRate)\r\n      sample = adjust.sample\r\n      header.sampleRate *= adjust.multiply\r\n      header.loopStart *= adjust.multiply\r\n      header.loopEnd *= adjust.multiply\r\n    }\r\n    return sample\r\n  })\r\n}","import { ParseResult } from \"./Parser\"\r\nimport { RangeValue, GeneratorList } from \"./Structs\"\r\n\r\n/**\r\n * Parser で読み込んだサウンドフォントのデータを\r\n * Synthesizer から利用しやすい形にするクラス\r\n */\r\nexport default class SoundFont {\r\n  private parsed: ParseResult\r\n\r\n  constructor(parsed: ParseResult) {\r\n    this.parsed = parsed\r\n  }\r\n\r\n  getPresetZone(presetHeaderIndex: number) {\r\n    let presetGenerators: GeneratorList[]\r\n    const presetHeader = this.parsed.presetHeaders[presetHeaderIndex]\r\n    const presetBag = this.parsed.presetZone[presetHeader.presetBagIndex]\r\n\r\n    const nextPresetHeaderIndex = presetHeaderIndex + 1\r\n    if (nextPresetHeaderIndex < this.parsed.presetHeaders.length) {\r\n      // 次の preset までのすべての generator を取得する\r\n      const nextPresetHeader = this.parsed.presetHeaders[nextPresetHeaderIndex]\r\n      const nextPresetBag = this.parsed.presetZone[nextPresetHeader.presetBagIndex]\r\n      presetGenerators = this.parsed.presetGenerators.slice(presetBag.presetGeneratorIndex, nextPresetBag.presetGeneratorIndex)\r\n    } else {\r\n      // 最後の preset だった場合は最後まで取得する\r\n      presetGenerators = this.parsed.presetGenerators.slice(presetBag.presetGeneratorIndex, this.parsed.presetGenerators.length)\r\n    }\r\n\r\n    return presetGenerators\r\n  }\r\n\r\n  getInstrumentZone(instrumentZoneIndex: number) {\r\n    const instrumentBag = this.parsed.instrumentZone[instrumentZoneIndex]\r\n    const nextInstrumentBag = this.parsed.instrumentZone[instrumentZoneIndex + 1]\r\n    const generatorIndex = instrumentBag.instrumentGeneratorIndex\r\n    const nextGeneratorIndex = nextInstrumentBag ? nextInstrumentBag.instrumentGeneratorIndex : this.parsed.instrumentGenerators.length\r\n    const generators = this.parsed.instrumentGenerators.slice(generatorIndex, nextGeneratorIndex)\r\n    return createInstrumentZone(generators)\r\n  }\r\n\r\n  getInstrumentZoneIndexes(instrumentID: number): number[] {\r\n    const instrument = this.parsed.instruments[instrumentID]\r\n    const nextInstrument = this.parsed.instruments[instrumentID + 1]\r\n    return arrayRange(instrument.instrumentBagIndex, nextInstrument ? nextInstrument.instrumentBagIndex : this.parsed.instrumentZone.length)\r\n  }\r\n\r\n  getInstrumentKey(bankNumber, instrumentNumber, key, velocity = 100): NoteInfo | null {\r\n    const presetHeaderIndex = this.parsed.presetHeaders.findIndex(p => p.preset === instrumentNumber && p.bank === bankNumber)\r\n\r\n    if (presetHeaderIndex < 0) {\r\n      console.warn(\"preset not found: bank=%s instrument=%s\", bankNumber, instrumentNumber)\r\n      return null\r\n    }\r\n\r\n    const presetGenerators = this.getPresetZone(presetHeaderIndex)\r\n\r\n    // Last Preset Generator must be instrument\r\n    const lastPresetGenertor = presetGenerators[presetGenerators.length - 1]\r\n    if (lastPresetGenertor.type !== \"instrument\" || isNaN(Number(lastPresetGenertor.value))) {\r\n      throw new Error(\"Invalid SoundFont: invalid preset generator: expect instrument\")\r\n    }\r\n    const instrumentID = lastPresetGenertor.value as number\r\n    const instrumentZones = this.getInstrumentZoneIndexes(instrumentID).map(i => this.getInstrumentZone(i))\r\n\r\n    // 最初のゾーンがsampleID を持たなければ global instrument zone\r\n    let globalInstrumentZone: any | undefined\r\n    const firstInstrumentZone = instrumentZones[0]\r\n    if (firstInstrumentZone.sampleID === undefined) {\r\n      globalInstrumentZone = instrumentZones[0]\r\n    }\r\n\r\n    // keyRange と velRange がマッチしている Generator を探す\r\n    const instrumentZone = instrumentZones.find(i => {\r\n      if (i === globalInstrumentZone) {\r\n        return false // global zone を除外\r\n      }\r\n\r\n      let isInKeyRange = false\r\n      if (i.keyRange) {\r\n        isInKeyRange = key >= i.keyRange.lo && key <= i.keyRange.hi\r\n      }\r\n\r\n      let isInVelRange = true\r\n      if (i.velRange) {\r\n        isInVelRange = velocity >= i.velRange.lo && velocity <= i.velRange.hi\r\n      }\r\n\r\n      return isInKeyRange && isInVelRange\r\n    })\r\n\r\n    if (!instrumentZone) {\r\n      console.warn(\"instrument not found: bank=%s instrument=%s\", bankNumber, instrumentNumber)\r\n      return null\r\n    }\r\n\r\n    if (instrumentZone.sampleID === undefined) {\r\n      throw new Error(\"Invalid SoundFont: sampleID not found\")\r\n    }\r\n\r\n    const gen = { ...defaultInstrumentZone, ...removeUndefined(globalInstrumentZone || {}), ...removeUndefined(instrumentZone) }\r\n\r\n    const sample = this.parsed.samples[gen.sampleID!]\r\n    const sampleHeader = this.parsed.sampleHeaders[gen.sampleID!]\r\n    const tune = gen.coarseTune + gen.fineTune / 100\r\n    const basePitch = tune + (sampleHeader.pitchCorrection / 100) - (gen.overridingRootKey || sampleHeader.originalPitch)\r\n    const scaleTuning = gen.scaleTuning / 100\r\n\r\n    return {\r\n      sample,\r\n      sampleRate: sampleHeader.sampleRate,\r\n      sampleName: sampleHeader.sampleName,\r\n      sampleModes: gen.sampleModes,\r\n      playbackRate: (key) => Math.pow(Math.pow(2, 1 / 12), (key + basePitch) * scaleTuning),\r\n      modEnvToPitch: gen.modEnvToPitch / 100, // cent\r\n      scaleTuning,\r\n      start: gen.startAddrsCoarseOffset * 32768 + gen.startAddrsOffset,\r\n      end: gen.endAddrsCoarseOffset * 32768 + gen.endAddrsOffset,\r\n      loopStart: (\r\n        sampleHeader.loopStart +\r\n        gen.startloopAddrsCoarseOffset * 32768 +\r\n        gen.startloopAddrsOffset\r\n      ),\r\n      loopEnd: (\r\n        sampleHeader.loopEnd +\r\n        gen.endloopAddrsCoarseOffset * 32768 +\r\n        gen.endloopAddrsOffset\r\n      ),\r\n      volDelay: convertTime(gen.volDelay),\r\n      volAttack: convertTime(gen.volAttack),\r\n      volHold: convertTime(gen.volHold),\r\n      volDecay: convertTime(gen.volDecay),\r\n      volSustain: gen.volSustain / 1000,\r\n      volRelease: convertTime(gen.volRelease),\r\n      modDelay: convertTime(gen.modDelay),\r\n      modAttack: convertTime(gen.modAttack),\r\n      modHold: convertTime(gen.modHold),\r\n      modDecay: convertTime(gen.modDecay),\r\n      modSustain: gen.modSustain / 1000,\r\n      modRelease: convertTime(gen.modRelease),\r\n      keyRange: gen.keyRange,\r\n      velRange: gen.velRange,\r\n      initialFilterFc: gen.initialFilterFc,\r\n      modEnvToFilterFc: gen.modEnvToFilterFc, // semitone (100 cent)\r\n      initialFilterQ: gen.initialFilterQ,\r\n      initialAttenuation: gen.initialAttenuation,\r\n      freqVibLFO: gen.freqVibLFO ? convertTime(gen.freqVibLFO) * 8.176 : undefined,\r\n      pan: gen.pan,\r\n      mute: false,\r\n      releaseTime: gen.releaseTime\r\n    }\r\n  }\r\n\r\n  // presetNames[bankNumber][presetNumber] = presetName\r\n  getPresetNames() {\r\n    const bank: { [index: number]: { [index: number]: string } } = {}\r\n    this.parsed.presetHeaders.forEach(preset => {\r\n      if (!bank[preset.bank]) {\r\n        bank[preset.bank] = {}\r\n      }\r\n      bank[preset.bank][preset.preset] = preset.presetName\r\n    })\r\n    return bank\r\n  }\r\n}\r\n\r\n// value = 1200log2(sec) で表される時間を秒単位に変換する\r\nexport function convertTime(value) {\r\n  return Math.pow(2, value / 1200)\r\n}\r\n\r\nfunction removeUndefined(obj) {\r\n  const result = {}\r\n  Object.keys(obj).forEach(key => {\r\n    if (obj[key] !== undefined) {\r\n      result[key] = obj[key]\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\nfunction arrayRange(start, end) {\r\n  return Array.from({ length: end - start }, (_, k) => k + start);\r\n}\r\n\r\n// ひとつの instrument に対応する Generator の配列から使いやすくしたオブジェクトを返す\r\nfunction createInstrumentZone(instrumentGenerators: GeneratorList[]) {\r\n  function getValue(type: string): number | undefined {\r\n    const generator = instrumentGenerators.find(g => g.type === type)\r\n    if (!generator) {\r\n      return undefined\r\n    }\r\n    if (isNaN(Number(generator.value))) {\r\n      throw new Error(\"something wrong\")\r\n    }\r\n    return generator.value as number\r\n  }\r\n\r\n  // First Instrument Generator must be keyRange\r\n  const firstInstrumentGenerator = instrumentGenerators[0]\r\n  let keyRange: RangeValue | undefined\r\n  if (firstInstrumentGenerator && firstInstrumentGenerator.type === \"keyRange\") {\r\n    if (!(firstInstrumentGenerator.value instanceof RangeValue)) {\r\n      throw new Error(\"Invalid SoundFont: keyRange is not ranged value\")\r\n    }\r\n    keyRange = firstInstrumentGenerator.value as RangeValue\r\n  }\r\n\r\n  // Second Instrument Generator could be velRange\r\n  const secondInstrumentGenerator = instrumentGenerators[1]\r\n  let velRange: RangeValue | undefined\r\n  if (secondInstrumentGenerator && secondInstrumentGenerator.type === \"velRange\") {\r\n    if (!(secondInstrumentGenerator.value instanceof RangeValue)) {\r\n      throw new Error(\"Invalid SoundFont: velRange is not ranged value\")\r\n    }\r\n    velRange = secondInstrumentGenerator.value as RangeValue\r\n  }\r\n\r\n  // Last Instrument Generator must be sampleID\r\n  const lastInstrumentGenerator = instrumentGenerators[instrumentGenerators.length - 1]\r\n  let sampleID: number | undefined\r\n  if (lastInstrumentGenerator && lastInstrumentGenerator.type === \"sampleID\") {\r\n    if (isNaN(Number(lastInstrumentGenerator.value))) {\r\n      throw new Error(\"Invalid SoundFont: sampleID is not number\")\r\n    }\r\n    sampleID = lastInstrumentGenerator.value as number\r\n  }\r\n  \r\n  return {\r\n    keyRange, // あるはずだが global zone には無いかもしれない\r\n    velRange, // optional\r\n    sampleID, // global zone の場合だけない\r\n    volAttack: getValue(\"attackVolEnv\"),\r\n    volDecay: getValue(\"decayVolEnv\"),\r\n    volDelay: getValue(\"delayVolEnv\"),\r\n    volSustain: getValue(\"sustainVolEnv\"),\r\n    volRelease: getValue(\"releaseVolEnv\"),\r\n    modAttack: getValue(\"attackModEnv\"),\r\n    modDecay: getValue(\"decayModEnv\"),\r\n    modDelay: getValue(\"delayModEnv\"),\r\n    modSustain: getValue(\"sustainModEnv\"),\r\n    modRelease: getValue(\"releaseModEnv\"),\r\n    modEnvToPitch: getValue(\"modEnvToPitch\"),\r\n    modEnvToFilterFc: getValue(\"modEnvToFilterFc\"),\r\n    coarseTune: getValue(\"coarseTune\"),\r\n    fineTune: getValue(\"fineTune\"),\r\n    scaleTuning: getValue(\"scaleTuning\"),\r\n    freqVibLFO: getValue(\"freqVibLFO\"),\r\n    startAddrsOffset: getValue(\"startAddrsOffset\"),\r\n    startAddrsCoarseOffset: getValue(\"startAddrsCoarseOffset\"),\r\n    endAddrsOffset: getValue(\"endAddrsOffset\"),\r\n    endAddrsCoarseOffset: getValue(\"endAddrsCoarseOffset\"),\r\n    startloopAddrsOffset: getValue(\"startloopAddrsOffset\"),\r\n    startloopAddrsCoarseOffset: getValue(\"startloopAddrsCoarseOffset\"),\r\n    endloopAddrsOffset: getValue(\"endloopAddrsOffset\"),\r\n    initialAttenuation: getValue(\"initialAttenuation\"),\r\n    endloopAddrsCoarseOffset: getValue(\"endloopAddrsCoarseOffset\"),\r\n    overridingRootKey: getValue(\"overridingRootKey\"),\r\n    initialFilterQ: getValue(\"initialFilterQ\"),\r\n    initialFilterFc: getValue(\"initialFilterFc\"),\r\n    sampleModes: getValue(\"sampleModes\"),\r\n    pan: getValue(\"pan\")\r\n  }\r\n}\r\n\r\nconst defaultInstrumentZone = {\r\n  keyRange: new RangeValue(0, 127),\r\n  velRange: new RangeValue(0, 127),\r\n  sampleID: undefined,\r\n  volDelay: -12000,\r\n  volAttack: -12000,\r\n  volDecay: -12000,\r\n  volHold: -12000,\r\n  volSustain: 0,\r\n  volRelease: -12000,\r\n  modDelay: -12000,\r\n  modAttack: -12000,\r\n  modHold: -12000,\r\n  modDecay: -12000,\r\n  modSustain: 0,\r\n  modRelease: -12000,\r\n  modEnvToPitch: 0,\r\n  modEnvToFilterFc: 0,\r\n  coarseTune: 0,\r\n  fineTune: 0,\r\n  scaleTuning: 100,\r\n  freqVibLFO: 0,\r\n  startAddrsOffset: 0,\r\n  startAddrsCoarseOffset: 0,\r\n  endAddrsOffset: 0,\r\n  endAddrsCoarseOffset: 0,\r\n  startloopAddrsOffset: 0,\r\n  startloopAddrsCoarseOffset: 0,\r\n  initialAttenuation: 0,\r\n  endloopAddrsOffset: 0,\r\n  endloopAddrsCoarseOffset: 0,\r\n  overridingRootKey: undefined,\r\n  initialFilterQ: 1,\r\n  initialFilterFc: 13500,\r\n  sampleModes: 0,\r\n  mute: false,\r\n  releaseTime: 64,\r\n  pan: undefined\r\n}\r\n\r\nexport interface NoteInfo {\r\n  sample: Int16Array\r\n  sampleRate: number\r\n  sampleName: string\r\n  sampleModes: number\r\n  playbackRate: Function\r\n  modEnvToPitch: number\r\n  scaleTuning: number\r\n  start: number\r\n  end: number\r\n  loopStart: number\r\n  loopEnd: number\r\n  volDelay: number\r\n  volAttack: number\r\n  volHold: number\r\n  volDecay: number\r\n  volSustain: number\r\n  volRelease: number\r\n  modDelay: number\r\n  modAttack: number\r\n  modHold: number\r\n  modDecay: number\r\n  modSustain: number\r\n  modRelease: number\r\n  initialFilterFc: number\r\n  modEnvToFilterFc: number\r\n  initialFilterQ: number\r\n  initialAttenuation: number\r\n  freqVibLFO: number | undefined\r\n  mute: boolean\r\n  releaseTime: number\r\n  pan: number | undefined\r\n  keyRange: RangeValue\r\n  velRange: RangeValue | undefined\r\n}\r\n","import SynthesizerNote from \"./SynthesizerNote\"\r\nimport parse from \"./Parser\"\r\nimport SoundFont from \"./SoundFont\"\r\nimport { InstrumentState } from \"./SynthesizerNote\"\r\nimport { Listener } from \"./MidiMessageHandler\"\r\n\r\nconst BASE_VOLUME = 0.4\r\n\r\nclass Channel {\r\n  instrument = 0\r\n  volume = 0\r\n  pitchBend = 0\r\n  pitchBendSensitivity = 0\r\n  panpot = 0\r\n  expression = 0\r\n  releaseTime = 0\r\n  reverb = 0\r\n  currentNoteOn: SynthesizerNote[] = []\r\n  hold = false\r\n  bankMsb = 0\r\n  bankLsb = 0\r\n  isPercussionPart = false\r\n  harmonicContent = 0\r\n  cutOffFrequency = 0\r\n  mute = false\r\n}\r\n\r\nexport default class Synthesizer implements Listener {\r\n  bufferSize: number = 1024\r\n  ctx: AudioContext\r\n  gainMaster: GainNode\r\n  channels: Channel[] = []\r\n  masterVolume: number = 1.0\r\n  soundFont: SoundFont\r\n\r\n  isXG: boolean\r\n  isGS: boolean\r\n\r\n  constructor(ctx) {\r\n    this.ctx = ctx\r\n    this.gainMaster = this.ctx.createGain()\r\n    this.setMasterVolume(this.masterVolume)\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    this.channels = [];\r\n    for (let i = 0; i < 16; ++i) {\r\n      this.channels.push(new Channel())\r\n      this.programChange(i, 0x00)\r\n      this.volumeChange(i, 0x64)\r\n      this.panpotChange(i, 0x40)\r\n      this.pitchBend(i, 0)\r\n      this.pitchBendSensitivity(i, 2)\r\n      this.hold(i, false)\r\n      this.expression(i, 0x7f)\r\n      this.bankSelectMsb(i, i === 9 ? 0x80 : 0x00)\r\n      this.bankSelectLsb(i, 0x00)\r\n      this.setPercussionPart(i, i === 9)\r\n      this.releaseTime(i, 0x40)\r\n      this.setReverbDepth(i, 0x28)\r\n    }\r\n  }\r\n\r\n  loadSoundFont(input: Uint8Array) {\r\n    const parser = parse(input)\r\n    this.soundFont = new SoundFont(parser)\r\n  }\r\n\r\n  connect(destination: AudioNode) {\r\n    this.gainMaster.connect(destination)\r\n  }\r\n\r\n  setMasterVolume(volume: number) {\r\n    const vol = BASE_VOLUME * volume / 0x8000;\r\n    this.masterVolume = volume\r\n    if (vol) {\r\n      //this.gainMaster.gain.value = BASE_VOLUME * volume / 0x8000\r\n      this.gainMaster.gain.setTargetAtTime(BASE_VOLUME * volume / 0x8000, this.ctx.currentTime, 0.015);\r\n    }\r\n  }\r\n\r\n  noteOn(channelNumber: number, key: number, velocity: number) {\r\n    if (!this.soundFont) {\r\n      return\r\n    }\r\n    const bankNumber = this.getBank(channelNumber);\r\n    const channel = this.channels[channelNumber]\r\n\r\n    if (channel === undefined) {\r\n      return;\r\n    }\r\n\r\n    const noteInfo = this.soundFont.getInstrumentKey(bankNumber, channel.instrument, key, velocity)\r\n\r\n    if (!noteInfo) {\r\n      return\r\n    }\r\n\r\n    let panpot = channel.panpot - 64\r\n    panpot /= panpot < 0 ? 64 : 63\r\n\r\n    // create note information\r\n    const instrumentKey: InstrumentState = {\r\n      channel: channelNumber,\r\n      key: key,\r\n      velocity: velocity,\r\n      panpot: panpot,\r\n      volume: channel.volume / 127,\r\n      pitchBend: channel.pitchBend,\r\n      expression: channel.expression,\r\n      pitchBendSensitivity: channel.pitchBendSensitivity,\r\n      mute: channel.mute,\r\n      releaseTime: channel.releaseTime,\r\n      cutOffFrequency: channel.cutOffFrequency,\r\n      harmonicContent: channel.harmonicContent\r\n    }\r\n\r\n    // percussion\r\n    if (channel.isPercussionPart) {\r\n      if (key === 42 || key === 44) {\r\n        // 42: Closed Hi-Hat\r\n        // 44: Pedal Hi-Hat\r\n        // 46: Open Hi-Hat\r\n        this.noteOff(channelNumber, 46, 0);\r\n      }\r\n      if (key === 80) {\r\n        // 80: Mute Triangle\r\n        // 81: Open Triangle\r\n        this.noteOff(channelNumber, 81, 0);\r\n      }\r\n    }\r\n\r\n    // note on\r\n    const note = new SynthesizerNote(this.ctx, this.gainMaster, noteInfo, instrumentKey)\r\n    note.noteOn()\r\n    this.channels[channelNumber].currentNoteOn.push(note)\r\n  }\r\n\r\n  noteOff(channelNumber: number, key: number, _velocity: number) {\r\n    if (!this.soundFont) {\r\n      return\r\n    }\r\n    const bankNumber = this.getBank(channelNumber);\r\n    const channel = this.channels[channelNumber]\r\n\r\n    if (channel === undefined) {\r\n      return;\r\n    }\r\n\r\n    const instrumentKey = this.soundFont.getInstrumentKey(bankNumber, channel.instrument, key)\r\n\r\n    if (!instrumentKey) {\r\n      return\r\n    }\r\n\r\n    const currentNoteOn = channel.currentNoteOn\r\n\r\n    for (let i = 0, il = currentNoteOn.length; i < il; ++i) {\r\n      const note = currentNoteOn[i]\r\n      if (note.key === key) {\r\n        note.noteOff()\r\n        currentNoteOn.splice(i, 1)\r\n        --i\r\n        --il\r\n      }\r\n    }\r\n  }\r\n\r\n  hold(channelNumber: number, value: boolean) {\r\n    this.channels[channelNumber].hold = value;\r\n  }\r\n\r\n  bankSelectMsb(channelNumber: number, value: number) {\r\n    this.channels[channelNumber].bankMsb = value;\r\n  }\r\n\r\n  bankSelectLsb(channelNumber: number, value: number) {\r\n    this.channels[channelNumber].bankLsb = value;\r\n  }\r\n\r\n  programChange(channelNumber: number, instrument: number) {\r\n    this.channels[channelNumber].instrument = instrument\r\n  }\r\n\r\n  volumeChange(channelNumber: number, volume: number) {\r\n    this.channels[channelNumber].volume = volume\r\n  }\r\n\r\n  expression(channelNumber: number, expression: number) {\r\n    const currentNoteOn = this.channels[channelNumber].currentNoteOn\r\n    for (let i = 0, il = currentNoteOn.length; i < il; ++i) {\r\n      currentNoteOn[i].updateExpression(expression);\r\n    }\r\n\r\n    this.channels[channelNumber].expression = expression;\r\n  };\r\n\r\n  panpotChange(channelNumber: number, panpot: number) {\r\n    this.channels[channelNumber].panpot = panpot\r\n  }\r\n\r\n  pitchBend(channelNumber: number, pitchBend: number) {\r\n    pitchBend -= 0x2000\r\n    const channel = this.channels[channelNumber]\r\n\r\n    for (let note of channel.currentNoteOn) {\r\n      note.updatePitchBend(pitchBend)\r\n    }\r\n\r\n    channel.pitchBend = pitchBend\r\n  }\r\n\r\n  pitchBendSensitivity(channelNumber: number, sensitivity: number) {\r\n    this.channels[channelNumber].pitchBendSensitivity = sensitivity\r\n  }\r\n\r\n  releaseTime(channelNumber: number, releaseTime: number) {\r\n    this.channels[channelNumber].releaseTime = releaseTime;\r\n  }\r\n\r\n  allSoundOff(channelNumber: number) {\r\n    const currentNoteOn = this.channels[channelNumber].currentNoteOn\r\n\r\n    while (currentNoteOn.length > 0) {\r\n      this.noteOff(channelNumber, currentNoteOn[0].key, 0)\r\n    }\r\n  }\r\n\r\n  resetAllControl(channelNumber: number) {\r\n    this.pitchBend(channelNumber, 0)\r\n  }\r\n\r\n  setReverbDepth(channelNumber: number, depth: number) {\r\n    this.channels[channelNumber].reverb = depth\r\n  }\r\n\r\n  private getBank(channelNumber: number):number {\r\n    let bankIndex = 0;\r\n    const channel = this.channels[channelNumber];\r\n\r\n    if (channel === undefined) {\r\n      return 0;\r\n    }\r\n\r\n    if (channelNumber === 9) {\r\n      this.setPercussionPart(9, true);\r\n      return this.isXG ? 127 : 128;\r\n    }\r\n\r\n    if (this.isXG) {\r\n      // XG音源は、MSB→LSBの優先順でバンクセレクトをする。\r\n      if (channel.bankMsb === 64) {\r\n        // Bank Select MSB #64 (Voice Type: SFX)\r\n        bankIndex = 125;\r\n      } else if (channel.bankMsb === 126 || channel.bankMsb === 127) {\r\n        // Bank Select MSB #126 (Voice Type: Drum)\r\n        // Bank Select MSB #127 (Voice Type: Drum)\r\n        bankIndex = channel.bankMsb;\r\n      } else {\r\n        // Bank Select MSB #0 (Voice Type: Normal)\r\n        // TODO:本来こちらが正しいが、バンクに存在しない楽器の処理ができていないためコメントアウト\r\n        //bankIndex = this.channelBankLsb[channel];  \r\n        bankIndex = 0;\r\n      }\r\n    } else if (this.isGS) {\r\n      // GS音源\r\n      bankIndex = 0;\r\n\r\n      if (channel.isPercussionPart) {\r\n        // http://www.roland.co.jp/support/by_product/sd-20/knowledge_base/1826700/\r\n        bankIndex = 128;\r\n      } else {\r\n        // TODO: XG音源前提なんで・・・\r\n        //bankIndex = this.channelBankMsb[channel];\r\n      }\r\n    } else {\r\n      // GM音源の場合バンクセレクト無効化\r\n      bankIndex = 0;\r\n    }\r\n    //if (this.percussionPart[channel] && SoundFont.Instruments.PercussionProgramName[this.channelInstrument[channel]] === void 0) {\r\n    // パーカッションチャンネルで、GM に存在しないドラムセットが呼び出された時は、Standard Setを呼び出す。\r\n    //this.channelInstrument[channel] = 0;\r\n    //}\r\n    return bankIndex;\r\n  }\r\n  setPercussionPart(channelNumber: number, sw: boolean) {\r\n    this.channels[channelNumber].isPercussionPart = sw;\r\n  }\r\n}\r\n","const ProgramNames: { [index: number]: (string | null)[] } = {\r\n  /**\r\n   * GM Synth set\r\n   * http://amei.or.jp/midistandardcommittee/Recommended_Practice/GM2_japanese.pdf\r\n   */\r\n  0: [\r\n    \"Acoustic Piano\",\r\n    \"Bright Acoustic Piano\",\r\n    \"Electric Grand Piano\",\r\n    \"Honky-tonk Piano\",\r\n    \"Electric Piano\",\r\n    \"Electric Piano 2\",\r\n    \"Harpsichord\",\r\n    \"Clavi\",\r\n    \"Celesta\",\r\n    \"Glockenspiel\",\r\n    \"Musical box\",\r\n    \"Vibraphone\",\r\n    \"Marimba\",\r\n    \"Xylophone\",\r\n    \"Tubular Bell\",\r\n    \"Dulcimer\",\r\n    \"Drawbar Organ\",\r\n    \"Percussive Organ\",\r\n    \"Rock Organ\",\r\n    \"Church organ\",\r\n    \"Reed organ\",\r\n    \"Accordion\",\r\n    \"Harmonica\",\r\n    \"Tango Accordion\",\r\n    \"Acoustic Guitar (nylon)\",\r\n    \"Acoustic Guitar (steel)\",\r\n    \"Electric Guitar (jazz)\",\r\n    \"Electric Guitar (clean)\",\r\n    \"Electric Guitar (muted)\",\r\n    \"Overdriven Guitar\",\r\n    \"Distortion Guitar\",\r\n    \"Guitar Harmonics\",\r\n    \"Acoustic Bass\",\r\n    \"Electric Bass (finger)\",\r\n    \"Electric Bass (pick)\",\r\n    \"Fretless Bass\",\r\n    \"Slap Bass 1\",\r\n    \"Slap Bass 2\",\r\n    \"Synth Bass 1\",\r\n    \"Synth Bass 2\",\r\n    \"Violin\",\r\n    \"Viola\",\r\n    \"Cello\",\r\n    \"Double bass\",\r\n    \"Tremolo Strings\",\r\n    \"Pizzicato Strings\",\r\n    \"Orchestral Harp\",\r\n    \"Timpani\",\r\n    \"String Ensemble 1\",\r\n    \"String Ensemble 2\",\r\n    \"Synth Strings 1\",\r\n    \"Synth Strings 2\",\r\n    \"Voice Aahs\",\r\n    \"Voice Oohs\",\r\n    \"Synth Voice\",\r\n    \"Orchestra Hit\",\r\n    \"Trumpet\",\r\n    \"Trombone\",\r\n    \"Tuba\",\r\n    \"Muted Trumpet\",\r\n    \"French horn\",\r\n    \"Brass Section\",\r\n    \"Synth Brass 1\",\r\n    \"Synth Brass 2\",\r\n    \"Soprano Sax\",\r\n    \"Alto Sax\",\r\n    \"Tenor Sax\",\r\n    \"Baritone Sax\",\r\n    \"Oboe\",\r\n    \"English Horn\",\r\n    \"Bassoon\",\r\n    \"Clarinet\",\r\n    \"Piccolo\",\r\n    \"Flute\",\r\n    \"Recorder\",\r\n    \"Pan Flute\",\r\n    \"Blown Bottle\",\r\n    \"Shakuhachi\",\r\n    \"Whistle\",\r\n    \"Ocarina\",\r\n    \"Lead 1 (square)\",\r\n    \"Lead 2 (sawtooth)\",\r\n    \"Lead 3 (calliope)\",\r\n    \"Lead 4 (chiff)\",\r\n    \"Lead 5 (charang)\",\r\n    \"Lead 6 (voice)\",\r\n    \"Lead 7 (fifths)\",\r\n    \"Lead 8 (bass + lead)\",\r\n    \"Pad 1 (new age)\",\r\n    \"Pad 2 (warm)\",\r\n    \"Pad 3 (polysynth)\",\r\n    \"Pad 4 (choir)\",\r\n    \"Pad 5 (bowed)\",\r\n    \"Pad 6 (metallic)\",\r\n    \"Pad 7 (halo)\",\r\n    \"Pad 8 (sweep)\",\r\n    \"FX 1 (rain)\",\r\n    \"FX 2 (soundtrack)\",\r\n    \"FX 3 (crystal)\",\r\n    \"FX 4 (atmosphere)\",\r\n    \"FX 5 (brightness)\",\r\n    \"FX 6 (goblins)\",\r\n    \"FX 7 (echoes)\",\r\n    \"FX 8 (sci-fi)\",\r\n    \"Sitar\",\r\n    \"Banjo\",\r\n    \"Shamisen\",\r\n    \"Koto\",\r\n    \"Kalimba\",\r\n    \"Bagpipe\",\r\n    \"Fiddle\",\r\n    \"Shanai\",\r\n    \"Tinkle Bell\",\r\n    \"Agogo\",\r\n    \"Steel Drums\",\r\n    \"Woodblock\",\r\n    \"Taiko Drum\",\r\n    \"Melodic Tom\",\r\n    \"Synth Drum\",\r\n    \"Reverse Cymbal\",\r\n    \"Guitar Fret Noise\",\r\n    \"Breath Noise\",\r\n    \"Seashore\",\r\n    \"Bird Tweet\",\r\n    \"Telephone Ring\",\r\n    \"Helicopter\",\r\n    \"Applause\",\r\n    \"Gunshot\"\r\n  ],\r\n  /**\r\n   * GM2 Drum Set List\r\n   */\r\n  128: [\r\n    \"Standard Set\",\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    \"Room Set\",\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    \"Power Set\",\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    \"Electronic Set\",\r\n    \"Analog Set\",\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    \"Jazz Set\",\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    \"Brush Set\",\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    \"Orchestra Set\",\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    \"SFX Set\"\r\n  ]\r\n}\r\n\r\nexport default ProgramNames","import Synthesizer from \"./Synthesizer\"\r\nimport ProgramNames from \"./ProgramNames\"\r\nimport { Listener } from \"./MidiMessageHandler\"\r\n\r\nfunction render(str: string): Element {\r\n  const wrapper = document.createElement(\"div\")\r\n  wrapper.innerHTML = str.replace(/^\\s+/, \"\")\r\n  return wrapper.firstElementChild!\r\n}\r\n\r\nfunction renderKeys(): string {\r\n  let html = \"\"\r\n  for (let i = 0; i < 128; i++) {\r\n    const n = i % 12\r\n    const isBlack = [1, 3, 6, 8, 10].includes(n)\r\n    html += `<div class=\"key ${isBlack ? \"black\" : \"white\"}\"></div>`\r\n  }\r\n  return html\r\n}\r\n\r\nfunction renderProgramOptions(programNames: { [index: number]: string[] }, bank: number): string {\r\n  let html = \"\"\r\n  const names = programNames[bank]\r\n  for (let i in names) {\r\n    const name = names[i]\r\n    if (name == \"None (None)\") continue;\r\n    html += `<option value=\"${i}\">${i}: ${name}</option>`\r\n  }\r\n  return `<select>${html}</select>`\r\n}\r\n\r\nfunction renderInstrument(program): Element {\r\n  return render(`\r\n    <div class=\"instrument\">\r\n      <div class=\"program\">${program}</div>\r\n      <div class=\"volume\"></div>\r\n      <div class=\"panpot\"></div>\r\n      <div class=\"pitchBend\"></div>\r\n      <div class=\"pitchBendSensitivity\"></div>\r\n      <div class=\"keys\">${renderKeys()}</div>\r\n    </div>\r\n  `)\r\n}\r\n\r\nfunction objectMap(o, func) {\r\n  const result = {}\r\n  Object.keys(o).forEach(key => {\r\n    result[key] = func(o[key])\r\n  })\r\n  return result\r\n}\r\n\r\nfunction programNamesFromBankSet(bankSet) {\r\n  //return objectMap(bankSet, bank => objectMap(bank, s => s.name))\r\n  let result = {}\r\n  Object.keys(bankSet).forEach(no => {\r\n    result[no] = bankSet[no]\r\n  })\r\n  return result\r\n}\r\n\r\nfunction mergeProgramNames(left: { [index: number]: (string | null)[] }, right: { [index: number]: (string | null)[] }) {\r\n  function mergedKeys(a, b) {\r\n    return new Set([...Object.keys(a), ...Object.keys(b)])\r\n  }\r\n  const banks = mergedKeys(left, right)\r\n  const result = {}\r\n  banks.forEach(bank => {\r\n    const l = left[bank] || []\r\n    const r = right[bank] || []\r\n    const list: { [index: number]: string | null } = {}\r\n    const programs = mergedKeys(l, r)\r\n    programs.forEach(p => {\r\n      list[p] = `${l[p] || \"None\"} (${r[p] || \"None\"})`\r\n    })\r\n    result[bank] = list\r\n  })\r\n  return result\r\n}\r\n\r\nexport default class View implements Listener {\r\n  private element: Element | null\r\n  private drag: boolean = false\r\n\r\n  draw(synth: Synthesizer): Element {\r\n    const element = this.element = render(`<div />`)\r\n    const programNames = mergeProgramNames(programNamesFromBankSet(synth.soundFont.getPresetNames()), ProgramNames)\r\n\r\n    for (let i = 0; i < 16; ++i) {\r\n      const bank = i !== 9 ? 0 : 128\r\n      const program = renderProgramOptions(programNames, bank)\r\n      const item = renderInstrument(program)\r\n\r\n      const channel = i\r\n      const select = item.querySelector('select')\r\n      if (select) {\r\n        select.addEventListener('change', event => {\r\n          const target = event.target as HTMLSelectElement\r\n          const program = parseInt(target.value, 10)\r\n          this.programChange(channel, program)\r\n          synth.programChange(channel, program)\r\n        }, false)\r\n        select.selectedIndex = synth.channels[i].instrument\r\n      }\r\n\r\n      const notes = item.querySelectorAll(\".key\")\r\n      for (let j = 0; j < 128; ++j) {\r\n        const key = j\r\n\r\n        notes[j].addEventListener('mousedown', event => {\r\n          event.preventDefault()\r\n          this.drag = true\r\n          this.noteOn(channel, key, 127)\r\n          synth.noteOn(channel, key, 127)\r\n\r\n          const onMouseUp = event => {\r\n            document.removeEventListener('mouseup', onMouseUp)\r\n            event.preventDefault()\r\n            this.drag = false\r\n            this.noteOff(channel, key, 0)\r\n            synth.noteOff(channel, key, 0)\r\n          }\r\n\r\n          document.addEventListener('mouseup', onMouseUp)\r\n        })\r\n        notes[j].addEventListener('mouseover', event => {\r\n          event.preventDefault()\r\n          if (this.drag) {\r\n            this.noteOn(channel, key, 127)\r\n            synth.noteOn(channel, key, 127)\r\n          }\r\n        })\r\n        notes[j].addEventListener('mouseout', event => {\r\n          event.preventDefault()\r\n          this.noteOff(channel, key, 0)\r\n          synth.noteOff(channel, key, 0)\r\n        })\r\n      }\r\n\r\n      element.appendChild(item)\r\n    }\r\n\r\n    return element\r\n  }\r\n\r\n  remove() {\r\n    if (!this.element) {\r\n      return\r\n    }\r\n\r\n    this.element.parentNode!.removeChild(this.element)\r\n    this.element = null\r\n  }\r\n\r\n  private getInstrumentElement(channel: number): Element | null {\r\n    if (!this.element) {\r\n      return null\r\n    }\r\n    return this.element.querySelectorAll(\".instrument\")[channel]\r\n  }\r\n\r\n  private getKeyElement(channel: number, key: number): Element | null {\r\n    const elem = this.getInstrumentElement(channel)\r\n    if (!elem) {\r\n      return null\r\n    }\r\n    return elem.querySelectorAll(\".key\")[key]\r\n  }\r\n\r\n  private findInstrumentElement(channel: number, query: string): Element | null {\r\n    const elem = this.getInstrumentElement(channel)\r\n    if (!elem) {\r\n      return null\r\n    }\r\n    return elem.querySelector(query)\r\n  }\r\n\r\n  noteOn(channel: number, key: number, _velocity: number) {\r\n    const element = this.getKeyElement(channel, key)\r\n    if (element) {\r\n      element.classList.add('note-on')\r\n    }\r\n  }\r\n\r\n  noteOff(channel: number, key: number, _velocity: number) {\r\n    const element = this.getKeyElement(channel, key)\r\n    if (element) {\r\n      element.classList.remove('note-on')\r\n    }\r\n  }\r\n\r\n  programChange(channel: number, instrument: number) {\r\n    const select = this.findInstrumentElement(channel, \".program select\") as HTMLSelectElement | undefined\r\n    if (select) {\r\n      select.value = `${instrument}`\r\n    }\r\n  }\r\n\r\n  volumeChange(channel: number, volume: number) {\r\n    const element = this.findInstrumentElement(channel, \".volume\")\r\n    if (element) {\r\n      element.textContent = `${volume}`\r\n    }\r\n  }\r\n\r\n  panpotChange(channel: number, panpot: number) {\r\n    const element = this.findInstrumentElement(channel, \".panpot\")\r\n    if (element) {\r\n      element.textContent = `${panpot}`\r\n    }\r\n  }\r\n\r\n  pitchBend(channel: number, pitchBend: number) {\r\n    const element = this.findInstrumentElement(channel, \".pitchBend\")\r\n    if (element) {\r\n      element.textContent = `${pitchBend}`\r\n    }\r\n  }\r\n\r\n  pitchBendSensitivity(channel: number, sensitivity: number) {\r\n    const element = this.findInstrumentElement(channel, \".pitchBendSensitivity\")\r\n    if (element) {\r\n      element.textContent = `${sensitivity}`\r\n    }\r\n  }\r\n\r\n  allSoundOff(_channelNumber: number) {\r\n  }\r\n\r\n  setMasterVolume(_volume: number) {\r\n  }\r\n\r\n  resetAllControl(_channelNumber: number) {\r\n  }\r\n  init() {\r\n\r\n  }\r\n  expression(_value: number) {\r\n\r\n  }\r\n}\r\n","import Synthesizer from \"./Synthesizer\"\r\nexport interface Listener {\r\n  init()\r\n  noteOn(channel: number, key: number, velocity: number)\r\n  noteOff(channel: number, key: number, velocity: number)\r\n  setMasterVolume(volume: number)\r\n  programChange(channelNumber: number, instrument: number)\r\n  volumeChange(channelNumber: number, volume: number)\r\n  panpotChange(channelNumber: number, panpot: number)\r\n  pitchBend(channelNumber: number, pitchBend: number)\r\n  pitchBendSensitivity(channelNumber: number, sensitivity: number)\r\n  allSoundOff(channelNumber: number)\r\n  resetAllControl(channelNumber: number)\r\n  expression(channelNumber: number, expression: number)\r\n  setPercussionPart(channelNumber: number, sw: boolean)\r\n  hold(channelNumber: number, sw: boolean)\r\n  setReverbDepth(channelNumber: number, depth: number)\r\n  releaseTime(channelNumber: number, value: number)\r\n  isXG: boolean\r\n  isGS: boolean\r\n}\r\n\r\nexport default class MidiMessageHandler {\r\n  private RpnMsb = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  private RpnLsb = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n  listener: Listener\r\n\r\n  processMidiMessage(message: number[]) {\r\n    const channel = message[0] & 0x0f\r\n    const { listener } = this\r\n\r\n    if (listener === undefined) {\r\n      return\r\n    }\r\n    switch (message[0] & 0xf0) {\r\n      case 0x80: // NoteOff: 8n kk vv\r\n        listener.noteOff(channel, message[1], message[2])\r\n        break\r\n      case 0x90: // NoteOn: 9n kk vv\r\n        if (message[2] > 0) {\r\n          listener.noteOn(channel, message[1], message[2])\r\n        } else {\r\n          listener.noteOff(channel, message[1], 0)\r\n        }\r\n        break\r\n      case 0xB0: // Control Change: Bn cc dd\r\n        switch (message[1]) {\r\n          case 0x06: // Data Entry: Bn 06 dd\r\n            switch (this.RpnMsb[channel]) {\r\n              case 0:\r\n                switch (this.RpnLsb[channel]) {\r\n                  case 0: // Pitch Bend Sensitivity\r\n                    listener.pitchBendSensitivity(channel, message[2])\r\n                    break\r\n                  default:\r\n                    break\r\n                }\r\n                break\r\n              default:\r\n                break\r\n            }\r\n            break\r\n          case 0x07: // Volume Change: Bn 07 dd\r\n            listener.volumeChange(channel, message[2])\r\n            break\r\n          case 0x0A: // Panpot Change: Bn 0A dd\r\n            listener.panpotChange(channel, message[2])\r\n            break\r\n          case 0x78: // All Sound Off: Bn 78 00\r\n            listener.allSoundOff(channel)\r\n            break\r\n          case 0x79: // Reset All Control: Bn 79 00\r\n            listener.resetAllControl(channel)\r\n            break\r\n          case 0x20: // BankSelect\r\n            //console.log(\"bankselect:\", channel, message[2])\r\n            break\r\n          case 0x64: // RPN MSB\r\n            this.RpnMsb[channel] = message[2]\r\n            break\r\n          case 0x65: // RPN LSB\r\n            this.RpnLsb[channel] = message[2]\r\n            break\r\n          case 0x40: // Hold\r\n            listener.hold(channel, message[2] !== 0);\r\n            break;\r\n          case 0x0b: // Expression\r\n            listener.expression(channel, message[2]);\r\n            break;\r\n          case 0x47: // Cutoff Fequency (Brightness)\r\n            // listener.cutOffFrequency[channel] = message[2];\r\n            break;\r\n          case 0x48: // DecayTyme\r\n            // synth.decayTime[channel] = value;\r\n            break;\r\n          case 0x49: // ReleaseTime\r\n            listener.releaseTime(channel, message[2]);\r\n            break;\r\n          case 0x4A: // Hermonic Content (Resonance)\r\n            // listener.harmonicContent[channel] = message[2];\r\n            break;\r\n          case 0x5B: // Effect1 Depth（Reverb Send Level）\r\n            listener.setReverbDepth(channel, message[2]);\r\n            break;\r\n          default:\r\n          // not supported\r\n        }\r\n        break\r\n      case 0xC0: // Program Change: Cn pp\r\n        listener.programChange(channel, message[1])\r\n        break\r\n      case 0xE0: { // Pitch Bend\r\n        const bend = ((message[1] & 0x7f) | ((message[2] & 0x7f) << 7))\r\n        listener.pitchBend(channel, bend)\r\n        break\r\n      }\r\n      case 0xf0: // System Exclusive Message\r\n        // ID number\r\n        switch (message[1]) {\r\n          case 0x7e: // non-realtime\r\n            // GM Reset: F0 7E 7F 09 01 F7\r\n            if (message[2] === 0x7f && message[3] === 0x09 && message[4] === 0x01) {\r\n              listener.isXG = false;\r\n              listener.isGS = false;\r\n              listener.init();\r\n            }\r\n            break;\r\n          case 0x7f: // realtime\r\n            // const device = message[2]\r\n            // sub ID 1\r\n            switch (message[3]) {\r\n              case 0x04: // device control\r\n                // sub ID 2\r\n                switch (message[4]) {\r\n                  case 0x01: { // master volume\r\n                    const volume = message[5] + (message[6] << 7)\r\n                    const MAX_VOLUME = 0x4000 - 1\r\n                    listener.setMasterVolume(volume / MAX_VOLUME)\r\n                    break\r\n                  }\r\n                  default:\r\n                    break\r\n                }\r\n                break\r\n              default:\r\n                break\r\n            }\r\n            break\r\n          default:\r\n            break\r\n        }\r\n        // Vendor\r\n        switch (message[2]) {\r\n          case 0x43: // Yamaha XG\r\n            if (message[5] === 0x08) {\r\n              // XG Dram Part: F0 43 [dev] 4C 08 [partNum] 07 [map] F7\r\n              // but there is no file to use much this parameter...\r\n              if (message[7] !== 0x00) { // [map]\r\n                listener.setPercussionPart(message[6], true);\r\n              } else {\r\n                listener.setPercussionPart(message[6], false);\r\n              }\r\n              //goog.global.console.log(message);\r\n            }\r\n            switch (message[7]) {\r\n              case 0x04:\r\n                // XG Master Volume: F0 43 [dev] 4C 00 00 04 [value] F7\r\n                listener.setMasterVolume((message[8] << 7) * 2);\r\n                //console.log(message[8] << 7);\r\n                break;\r\n              case 0x7E:\r\n                // XG Reset: F0 43 [dev] 4C 00 00 7E 00 F7\r\n                listener.init();\r\n                listener.isXG = true;\r\n                break;\r\n            }\r\n            break;\r\n          case 0x41: // Roland GS / TG300B Mode\r\n            // TODO\r\n            switch (message[8]) {\r\n              case 0x04:\r\n                // GS Master Volume: F0 41 [dev] 42 12 40 00 04 [value] 58 F7\r\n                listener.setMasterVolume(message[9] << 7);\r\n                break;\r\n              case 0x7F:\r\n                // GS Reset: F0 41 [dev] 42 12 40 00 7F 00 41 F7\r\n                listener.init();\r\n                listener.isGS = true;\r\n                break;\r\n              case 0x15:\r\n                // GS Dram part: F0 41 [dev] 42 12 40 1[part no] [Map] [sum] F7\r\n                // Notice: [sum] is ignroe in this program.\r\n                // http://www.ssw.co.jp/dtm/drums/drsetup.htm\r\n                // http://www.roland.co.jp/support/by_product/sd-20/knowledge_base/1826700/\r\n\r\n                var part = message[7] - 0x0F;\r\n                var map = message[8];\r\n                if (part === 0) {\r\n                  // 10 Ch.\r\n                  if (map !== 0x00) {\r\n                    listener.setPercussionPart(9, true);\r\n                  } else {\r\n                    listener.setPercussionPart(9, false);\r\n                  }\r\n                } else if (part >= 10) {\r\n                  // 1~9 Ch.\r\n                  if (map !== 0x00) {\r\n                    listener.setPercussionPart(part - 1, true);\r\n                  } else {\r\n                    listener.setPercussionPart(part - 1, false);\r\n                  }\r\n                } else {\r\n                  // 11~16 Ch.\r\n                  if (map !== 0x00) {\r\n                    listener.setPercussionPart(part, true);\r\n                  } else {\r\n                    listener.setPercussionPart(part, false);\r\n                  }\r\n                }\r\n                break\r\n            }\r\n            break\r\n        }\r\n        break\r\n      default: // not supported\r\n        break\r\n    }\r\n  }\r\n}\r\n","// delegates method calls to multiple targets\r\nexport default function delegateProxy<T extends Object>(targets: T[]) {\r\n  return new Proxy(targets[0], {\r\n    get(target, propKey, _receiver) {\r\n      return () => {\r\n        targets\r\n          .map(t => t[propKey].bind(target))\r\n          .forEach(f => f(...arguments))\r\n      }\r\n    }\r\n  })\r\n}\r\n","import Synthesizer from \"./Synthesizer\"\r\nimport View from \"./View\"\r\nimport MidiMessageHandler, { Listener } from \"./MidiMessageHandler\"\r\nimport delegateProxy from \"./delegateProxy\"\r\n\r\nexport default class WebMidiLink {\r\n  loadCallback: (ArrayBuffer) => void\r\n  midiMessageHandler: MidiMessageHandler\r\n  ready: boolean = false\r\n  synth: Synthesizer\r\n  view: View\r\n  target: Element | null\r\n  wml: Window | null\r\n\r\n  constructor(target = \".synth\") {\r\n    this.midiMessageHandler = new MidiMessageHandler()\r\n    this.target = document.body.querySelector(target);\r\n    if (!this.target) {\r\n      throw \"Target DOM is not found.\";\r\n    }\r\n    if (window.opener) {\r\n      this.wml = window.opener;\r\n    } else if (window.parent !== window) {\r\n      this.wml = window.parent;\r\n    } else {\r\n      this.wml = null;\r\n    }\r\n\r\n\r\n    window.addEventListener('DOMContentLoaded', function () {\r\n      this.ready = true\r\n    }.bind(this), false)\r\n  }\r\n\r\n  setup(url) {\r\n    if (!this.ready) {\r\n      window.addEventListener('DOMContentLoaded', function onload() {\r\n        window.removeEventListener('DOMContentLoaded', onload, false)\r\n        this.load(url)\r\n      }.bind(this), false)\r\n    } else {\r\n      this.load(url)\r\n    }\r\n  }\r\n\r\n  load(url) {\r\n    const xhr = new XMLHttpRequest()\r\n    const progress = this.target!.appendChild(document.createElement('progress'));\r\n    const percentage = progress.parentNode!.insertBefore(document.createElement('outpout'), progress.nextElementSibling);\r\n\r\n    xhr.open('GET', url, true)\r\n    xhr.responseType = 'arraybuffer'\r\n\r\n    xhr.addEventListener('load', function (ev) {\r\n      const xhr = ev.target as XMLHttpRequest\r\n\r\n      this.onload(xhr.response)\r\n      this.target!.removeChild(progress);\r\n      this.target!.removeChild(percentage);\r\n      if (typeof this.loadCallback === 'function') {\r\n        this.loadCallback(xhr.response)\r\n      }\r\n    }.bind(this), false)\r\n\r\n    xhr.addEventListener('progress', function (e) {\r\n      progress.max = e.total;\r\n      progress.value = e.loaded;\r\n      percentage.innerText = (e.loaded / e.total) / 100 + ' %';\r\n      // NOTE: This message is not compliant of WebMidiLink.\r\n      if (this.wml) this.wml.postMessage('link,progress,' + e.loaded + ',' + e.total, '*');\r\n    }.bind(this), false)\r\n    xhr.send()\r\n  }\r\n\r\n  onload(response: ArrayBuffer) {\r\n    const input = new Uint8Array(response)\r\n    this.loadSoundFont(input)\r\n  }\r\n\r\n  loadSoundFont(input: Uint8Array) {\r\n    let synth: Synthesizer\r\n\r\n    if (!this.synth) {\r\n      const ctx = new AudioContext()\r\n      synth = this.synth = new Synthesizer(ctx)\r\n      synth.connect(ctx.destination)\r\n      synth.loadSoundFont(input)\r\n      const view = this.view = new View()\r\n      this.target!.appendChild(view.draw(synth))\r\n      this.midiMessageHandler.listener = delegateProxy<Listener>([synth, view])\r\n      window.addEventListener('message', this.onmessage.bind(this), false)\r\n    } else {\r\n      synth = this.synth\r\n      synth.loadSoundFont(input)\r\n    }\r\n\r\n    // link ready\r\n    if (this.wml) this.wml.postMessage(\"link,ready\", '*')\r\n  }\r\n\r\n  onmessage(ev: MessageEvent) {\r\n    const msg = ev.data.split(',')\r\n    const type = msg.shift()\r\n\r\n    switch (type) {\r\n      case 'midi':\r\n        this.midiMessageHandler.processMidiMessage(\r\n          msg.map(function (hex) {\r\n            return parseInt(hex, 16)\r\n          })\r\n        )\r\n        break\r\n      case 'link':\r\n        const command = msg.shift()\r\n        switch (command) {\r\n          case 'reqpatch':\r\n            // TODO: dummy data\r\n            if (this.wml) this.wml.postMessage(\"link,patch\", '*')\r\n            break\r\n          case 'setpatch':\r\n            // TODO: NOP\r\n            break\r\n          default:\r\n            console.error('unknown link message:', command)\r\n            break\r\n        }\r\n        break\r\n      default:\r\n        console.error('unknown message type')\r\n    }\r\n  }\r\n\r\n  setLoadCallback(callback: (ArrayBuffer) => void) {\r\n    this.loadCallback = callback\r\n  }\r\n}\r\n"],"names":["parseChunk"],"mappings":"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"}