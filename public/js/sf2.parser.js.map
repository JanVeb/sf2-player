{"version":3,"file":"sf2.parser.js","sources":["../../src/Stream.ts","../../src/RiffParser.ts","../../src/Constants.ts","../../src/Structs.ts","../../src/Parser.ts","../../src/SoundFont.ts"],"sourcesContent":["export default class Stream {\r\n  private data: Uint8Array\r\n  ip: number\r\n\r\n  constructor(data, offset) {\r\n    this.data = data\r\n    this.ip = offset\r\n  }\r\n\r\n  readString(size: number): string {\r\n    const str = String.fromCharCode.apply(null, this.data.subarray(this.ip, this.ip += size))\r\n    const nullLocation = str.indexOf(\"\\u0000\")\r\n    if (nullLocation > 0) {\r\n      return str.substr(0, nullLocation)\r\n    }\r\n    return str\r\n  }\r\n\r\n  readWORD(): number {\r\n    return this.data[this.ip++] | (this.data[this.ip++] << 8)\r\n  }\r\n\r\n  readDWORD(bigEndian: boolean = false): number {\r\n    if (bigEndian) {\r\n      return (\r\n        (this.data[this.ip++] << 24)| \r\n        (this.data[this.ip++] << 16) | \r\n        (this.data[this.ip++] << 8) | \r\n        (this.data[this.ip++])\r\n      ) >>> 0\r\n    } else {\r\n      return (\r\n        this.data[this.ip++] | \r\n        (this.data[this.ip++] << 8) | \r\n        (this.data[this.ip++] << 16) | \r\n        (this.data[this.ip++] << 24)\r\n      ) >>> 0\r\n    }\r\n  }\r\n\r\n  readByte() {\r\n    return this.data[this.ip++]\r\n  }\r\n\r\n  readAt(offset: number) {\r\n    return this.data[this.ip + offset]\r\n  }\r\n\r\n  /* helper */\r\n\r\n  readUInt8() {\r\n    return this.readByte()\r\n  }\r\n  \r\n  readInt8() {\r\n    return (this.readByte() << 24) >> 24\r\n  }\r\n  \r\n  readUInt16() {\r\n    return this.readWORD()\r\n  }\r\n\r\n  readInt16() {\r\n    return (this.readWORD() << 16) >> 16\r\n  }\r\n\r\n  readUInt32() {\r\n    return this.readDWORD()\r\n  }\r\n}\r\n","import Stream from \"./Stream\"\r\n\r\nfunction parseChunk(input: Uint8Array, ip: number, bigEndian: boolean): Chunk {\r\n  const stream = new Stream(input, ip)\r\n  const type = stream.readString(4)\r\n  const size = stream.readDWORD(bigEndian)\r\n  return new Chunk(type, size, stream.ip)\r\n}\r\n\r\nexport interface Options {\r\n  padding?: boolean,\r\n  bigEndian?: boolean\r\n}\r\n\r\nexport function parseRiff(input: Uint8Array, index: number = 0, length: number, { padding = true, bigEndian = false }: Options = {}) {\r\n  const chunkList: Chunk[] = []\r\n  const end = length + index\r\n  let ip = index\r\n\r\n  while (ip < end) {\r\n    const chunk = parseChunk(input, ip, bigEndian)\r\n    ip = chunk.offset + chunk.size\r\n    \r\n    // padding\r\n    if (padding && ((ip - index) & 1) === 1) {\r\n      ip++\r\n    }\r\n    \r\n    chunkList.push(chunk)\r\n  }\r\n\r\n  return chunkList\r\n}\r\n\r\nexport class Chunk {\r\n  type: string\r\n  size: number\r\n  offset: number\r\n\r\n  constructor(type: string, size: number, offset: number) {\r\n    this.type = type\r\n    this.size = size\r\n    this.offset = offset\r\n  }\r\n}\r\n","export const GeneratorEnumeratorTable = [\r\n  'startAddrsOffset',\r\n  'endAddrsOffset',\r\n  'startloopAddrsOffset',\r\n  'endloopAddrsOffset',\r\n  'startAddrsCoarseOffset',\r\n  'modLfoToPitch',\r\n  'vibLfoToPitch',\r\n  'modEnvToPitch',\r\n  'initialFilterFc',\r\n  'initialFilterQ',\r\n  'modLfoToFilterFc',\r\n  'modEnvToFilterFc',\r\n  'endAddrsCoarseOffset',\r\n  'modLfoToVolume',\r\n  undefined, // 14\r\n  'chorusEffectsSend',\r\n  'reverbEffectsSend',\r\n  'pan',\r\n  undefined,undefined,undefined, // 18,19,20\r\n  'delayModLFO',\r\n  'freqModLFO',\r\n  'delayVibLFO',\r\n  'freqVibLFO',\r\n  'delayModEnv',\r\n  'attackModEnv',\r\n  'holdModEnv',\r\n  'decayModEnv',\r\n  'sustainModEnv',\r\n  'releaseModEnv',\r\n  'keynumToModEnvHold',\r\n  'keynumToModEnvDecay',\r\n  'delayVolEnv',\r\n  'attackVolEnv',\r\n  'holdVolEnv',\r\n  'decayVolEnv',\r\n  'sustainVolEnv',\r\n  'releaseVolEnv',\r\n  'keynumToVolEnvHold',\r\n  'keynumToVolEnvDecay',\r\n  'instrument',\r\n  undefined, // 42\r\n  'keyRange',\r\n  'velRange',\r\n  'startloopAddrsCoarseOffset',\r\n  'keynum',\r\n  'velocity',\r\n  'initialAttenuation',\r\n  undefined, // 49\r\n  'endloopAddrsCoarseOffset',\r\n  'coarseTune',\r\n  'fineTune',\r\n  'sampleID',\r\n  'sampleModes',\r\n  undefined, // 55\r\n  'scaleTuning',\r\n  'exclusiveClass',\r\n  'overridingRootKey'\r\n]\r\n","import { GeneratorEnumeratorTable } from \"./Constants\"\r\nimport Stream from \"./Stream\"\r\nimport { Chunk } from \"./RiffParser\"\r\n\r\nexport class VersionTag {\r\n  major: number\r\n  minor: number\r\n  \r\n  static parse(stream: Stream) {\r\n    const v = new VersionTag()\r\n    v.major = stream.readInt8()\r\n    v.minor = stream.readInt8()\r\n    return v\r\n  }\r\n}\r\n\r\nexport class Info {\r\n  comment: string|null\r\n  copyright: string|null\r\n  creationDate: string|null\r\n  engineer: string|null\r\n  name: string\r\n  product: string|null\r\n  software: string|null\r\n  version: VersionTag\r\n  soundEngine: string|null\r\n  romName: string|null\r\n  romVersion: VersionTag|null\r\n\r\n  // LIST - INFO の全ての chunk\r\n  static parse(data: Uint8Array, chunks: Chunk[]) {\r\n    function getChunk(type) {\r\n      return chunks.find(c => c.type === type) \r\n    }\r\n\r\n    function toStream(chunk) {\r\n      return new Stream(data, chunk.offset)\r\n    }\r\n\r\n    function readString(type) {\r\n      const chunk = getChunk(type)\r\n      if (!chunk) {\r\n        return null\r\n      }\r\n      return toStream(chunk)!.readString(chunk.size)\r\n    }\r\n\r\n    function readVersionTag(type) {\r\n      const chunk = getChunk(type)\r\n      if (!chunk) {\r\n        return null\r\n      }\r\n      return VersionTag.parse(toStream(chunk))\r\n    }\r\n    \r\n    const info = new Info()\r\n    info.comment = readString(\"ICMT\")\r\n    info.copyright = readString(\"ICOP\")\r\n    info.creationDate = readString(\"ICRD\")\r\n    info.engineer = readString(\"IENG\")\r\n    info.name = readString(\"INAM\")!\r\n    info.product = readString(\"IPRD\")\r\n    info.software = readString(\"ISFT\")\r\n    info.version = readVersionTag(\"ifil\")!\r\n    info.soundEngine = readString(\"isng\")\r\n    info.romName = readString(\"irom\")\r\n    info.romVersion = readVersionTag(\"iver\")\r\n    return info\r\n  }\r\n}\r\n\r\nexport class PresetHeader {\r\n  presetName: string\r\n  preset: number\r\n  bank: number\r\n  presetBagIndex: number\r\n  library: number\r\n  genre: number\r\n  morphology: number\r\n\r\n  get isEnd() {\r\n    return this.presetName === \"EOP\"\r\n  }\r\n\r\n  static parse(stream: Stream) {\r\n    const p = new PresetHeader()\r\n    p.presetName = stream.readString(20)\r\n    p.preset = stream.readWORD()\r\n    p.bank = stream.readWORD()\r\n    p.presetBagIndex = stream.readWORD()\r\n    p.library = stream.readDWORD()\r\n    p.genre = stream.readDWORD()\r\n    p.morphology = stream.readDWORD()\r\n    return p\r\n  }\r\n}\r\n\r\nexport class PresetBag {\r\n  presetGeneratorIndex: number\r\n  presetModulatorIndex: number\r\n\r\n  static parse(stream: Stream) {\r\n    const p = new PresetBag()\r\n    p.presetGeneratorIndex = stream.readWORD()\r\n    p.presetModulatorIndex = stream.readWORD()\r\n    return p\r\n  }\r\n}\r\n\r\nexport class RangeValue {\r\n  lo: number\r\n  hi: number\r\n\r\n  constructor(lo: number, hi: number) {\r\n    this.lo = lo\r\n    this.hi = hi\r\n  }\r\n\r\n  static parse(stream: Stream) {\r\n    return new RangeValue(\r\n      stream.readByte(), \r\n      stream.readByte()\r\n    )\r\n  }\r\n}\r\n\r\nexport class ModulatorList {\r\n  sourceOper: number\r\n  destinationOper: number\r\n  value: number|RangeValue\r\n  amountSourceOper: number\r\n  transOper: number\r\n\r\n  get type() {\r\n    return GeneratorEnumeratorTable[this.destinationOper]\r\n  }\r\n\r\n  get isEnd() {\r\n    return this.sourceOper === 0 && \r\n      this.destinationOper === 0 &&\r\n      this.value === 0 &&\r\n      this.amountSourceOper === 0 &&\r\n      this. transOper === 0\r\n  }\r\n\r\n  static parse(stream: Stream) {\r\n    const t = new ModulatorList()\r\n\r\n    t.sourceOper = stream.readWORD()\r\n    t.destinationOper = stream.readWORD()\r\n\r\n    switch (t.type) {\r\n      case 'keyRange': /* FALLTHROUGH */\r\n      case 'velRange': /* FALLTHROUGH */\r\n      case 'keynum': /* FALLTHROUGH */\r\n      case 'velocity':\r\n        t.value = RangeValue.parse(stream)\r\n        break\r\n      default:\r\n        t.value = stream.readInt16()\r\n        break\r\n    }\r\n    \r\n    t.amountSourceOper = stream.readWORD()\r\n    t.transOper = stream.readWORD()\r\n\r\n    return t\r\n  }\r\n}\r\n\r\nexport class GeneratorList {\r\n  code: number\r\n  value: number|RangeValue\r\n\r\n  get type() {\r\n    return GeneratorEnumeratorTable[this.code]\r\n  }\r\n\r\n  get isEnd() {\r\n    return this.code === 0 &&\r\n      this.value === 0\r\n  }\r\n\r\n  static parse(stream: Stream) {\r\n    const t = new GeneratorList()\r\n    t.code = stream.readWORD()\r\n\r\n    switch (t.type) {\r\n      case 'keynum': /* FALLTHROUGH */\r\n      case 'keyRange': /* FALLTHROUGH */\r\n      case 'velRange': /* FALLTHROUGH */\r\n      case 'velocity':\r\n        t.value = RangeValue.parse(stream)\r\n        break\r\n      default:\r\n        t.value = stream.readInt16()\r\n        break\r\n    }\r\n\r\n    return t\r\n  }\r\n}\r\n\r\nexport class Instrument {\r\n  instrumentName: string\r\n  instrumentBagIndex: number\r\n\r\n  get isEnd() {\r\n    return this.instrumentName === \"EOI\"\r\n  }\r\n  \r\n  static parse(stream: Stream) {\r\n    const t = new Instrument()\r\n    t.instrumentName = stream.readString(20)\r\n    t.instrumentBagIndex = stream.readWORD()\r\n    return t\r\n  }\r\n}\r\n\r\nexport class InstrumentBag {\r\n  instrumentGeneratorIndex: number\r\n  instrumentModulatorIndex: number\r\n  \r\n  static parse(stream: Stream) {\r\n    const t = new InstrumentBag()\r\n    t.instrumentGeneratorIndex = stream.readWORD()\r\n    t.instrumentModulatorIndex = stream.readWORD()\r\n    return t\r\n  }\r\n}\r\n\r\nexport class SampleHeader {\r\n  sampleName: string\r\n  start: number\r\n  end: number\r\n  loopStart: number\r\n  loopEnd: number\r\n  sampleRate: number\r\n  originalPitch: number\r\n  pitchCorrection: number\r\n  sampleLink: number\r\n  sampleType: number\r\n\r\n  get isEnd() {\r\n    return this.sampleName === \"EOS\"\r\n  }\r\n\r\n  static parse(stream: Stream) {\r\n    const s = new SampleHeader()\r\n\r\n    s.sampleName = stream.readString(20)\r\n    s.start = stream.readDWORD()\r\n    s.end = stream.readDWORD()\r\n    s.loopStart = stream.readDWORD()\r\n    s.loopEnd = stream.readDWORD()\r\n    s.sampleRate = stream.readDWORD()\r\n    s.originalPitch = stream.readByte()\r\n    s.pitchCorrection = stream.readInt8()\r\n    s.sampleLink = stream.readWORD()\r\n    s.sampleType = stream.readWORD()\r\n\r\n    s.loopStart -= s.start\r\n    s.loopEnd -= s.start\r\n\r\n    return s\r\n  }\r\n}\r\n\r\nexport const SampleLink = {\r\n  monoSample: 1,\r\n  rightSample: 2,\r\n  leftSample: 4,\r\n  linkedSample: 8,\r\n  RomMonoSample: 0x8001,\r\n  RomRightSample: 0x8002,\r\n  RomLeftSample: 0x8004,\r\n  RomLinkedSample: 0x8008\r\n}\r\n","import { parseRiff, Chunk, Options as RiffParserOptions } from \"./RiffParser\"\r\nimport { PresetHeader, SampleHeader, PresetBag, Instrument, InstrumentBag, ModulatorList, GeneratorList, Info } from \"./Structs\"\r\nimport Stream from \"./Stream\"\r\n\r\nexport interface ParseResult {\r\n  presetHeaders: PresetHeader[]\r\n  presetZone: PresetBag[]\r\n  presetModulators: ModulatorList[]\r\n  presetGenerators: GeneratorList[]\r\n  instruments: Instrument[]\r\n  instrumentZone: InstrumentBag[]\r\n  instrumentModulators: ModulatorList[]\r\n  instrumentGenerators: GeneratorList[]\r\n  sampleHeaders: SampleHeader[]\r\n  samples: Int16Array[]\r\n  samplingData: Chunk\r\n  info: Info\r\n}\r\n\r\nexport default function parse(input: Uint8Array, option: RiffParserOptions = {}): ParseResult {\r\n\r\n  // parse RIFF chunk\r\n  const chunkList = parseRiff(input, 0, input.length, option)\r\n\r\n  if (chunkList.length !== 1) {\r\n    throw new Error('wrong chunk length')\r\n  }\r\n\r\n  const chunk = chunkList[0]\r\n  if (chunk === null) {\r\n    throw new Error('chunk not found')\r\n  }\r\n\r\n  function parseRiffChunk(chunk: Chunk, data: Uint8Array) {\r\n    const chunkList = getChunkList(chunk, data, \"RIFF\", \"sfbk\")\r\n\r\n    if (chunkList.length !== 3) {\r\n      throw new Error('invalid sfbk structure')\r\n    }\r\n\r\n    return {\r\n      // INFO-list\r\n      info: parseInfoList(chunkList[0], data),\r\n\r\n      // sdta-list\r\n      samplingData: parseSdtaList(chunkList[1], data),\r\n\r\n      // pdta-list\r\n      ...parsePdtaList(chunkList[2], data)\r\n    }\r\n  }\r\n\r\n  function parsePdtaList(chunk: Chunk, data: Uint8Array) {\r\n    const chunkList = getChunkList(chunk, data, \"LIST\", \"pdta\")\r\n\r\n    // check number of chunks\r\n    if (chunkList.length !== 9) {\r\n      throw new Error('invalid pdta chunk')\r\n    }\r\n\r\n    return {\r\n      presetHeaders: parsePhdr(chunkList[0], data),\r\n      presetZone: parsePbag(chunkList[1], data),\r\n      presetModulators: parsePmod(chunkList[2], data),\r\n      presetGenerators: parsePgen(chunkList[3], data),\r\n      instruments: parseInst(chunkList[4], data),\r\n      instrumentZone: parseIbag(chunkList[5], data),\r\n      instrumentModulators: parseImod(chunkList[6], data),\r\n      instrumentGenerators: parseIgen(chunkList[7], data),\r\n      sampleHeaders: parseShdr(chunkList[8], data)\r\n    }\r\n  }\r\n\r\n  const result = parseRiffChunk(chunk, input)\r\n\r\n  return {\r\n    ...result,\r\n    samples: loadSample(result.sampleHeaders, result.samplingData.offset, input)\r\n  }\r\n}\r\n\r\nfunction getChunkList(chunk, data, expectedType, expectedSignature) {\r\n  // check parse target\r\n  if (chunk.type !== expectedType) {\r\n    throw new Error('invalid chunk type:' + chunk.type)\r\n  }\r\n\r\n  const stream = new Stream(data, chunk.offset)\r\n\r\n  // check signature\r\n  const signature = stream.readString(4)\r\n  if (signature !== expectedSignature) {\r\n    throw new Error('invalid signature:' + signature)\r\n  }\r\n\r\n  // read structure\r\n  return parseRiff(data, stream.ip, chunk.size - 4)\r\n}\r\n\r\nfunction parseInfoList(chunk: Chunk, data: Uint8Array) {\r\n  const chunkList = getChunkList(chunk, data, \"LIST\", \"INFO\")\r\n  return Info.parse(data, chunkList)\r\n}\r\n\r\nfunction parseSdtaList(chunk: Chunk, data: Uint8Array): Chunk {\r\n  const chunkList = getChunkList(chunk, data, \"LIST\", \"sdta\")\r\n\r\n  if (chunkList.length !== 1) {\r\n    throw new Error('TODO')\r\n  }\r\n\r\n  return chunkList[0]\r\n}\r\n\r\nfunction parseChunk<T>(chunk: Chunk, data: Uint8Array, type: string, clazz: { parse: (stream: Stream) => T }, terminate?: (obj: T) => boolean): T[] {\r\n  const result: T[] = []\r\n\r\n  if (chunk.type !== type) {\r\n    throw new Error('invalid chunk type:'  + chunk.type)\r\n  }\r\n  \r\n  const stream = new Stream(data, chunk.offset)\r\n  const size = chunk.offset + chunk.size\r\n  \r\n  while (stream.ip < size) {\r\n    const obj = clazz.parse(stream)\r\n    if (terminate && terminate(obj)) {\r\n      break\r\n    }\r\n    result.push(obj)\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nconst parsePhdr = (chunk, data) => parseChunk(chunk, data, \"phdr\", PresetHeader, p => p.isEnd)\r\nconst parsePbag = (chunk, data) => parseChunk(chunk, data, \"pbag\", PresetBag)\r\nconst parseInst = (chunk, data) => parseChunk(chunk, data, \"inst\", Instrument, i => i.isEnd)\r\nconst parseIbag = (chunk, data) => parseChunk(chunk, data, \"ibag\", InstrumentBag)\r\nconst parsePmod = (chunk, data) => parseChunk(chunk, data, \"pmod\", ModulatorList, m => m.isEnd)\r\nconst parseImod = (chunk, data) => parseChunk(chunk, data, \"imod\", ModulatorList, m => m.isEnd)\r\nconst parsePgen = (chunk, data) => parseChunk(chunk, data, \"pgen\", GeneratorList, g => g.isEnd)\r\nconst parseIgen = (chunk, data) => parseChunk(chunk, data, \"igen\", GeneratorList, g => g.isEnd)\r\nconst parseShdr = (chunk, data) => parseChunk(chunk, data, \"shdr\", SampleHeader, s => s.isEnd)\r\n\r\nfunction adjustSampleData(sample, sampleRate) {\r\n  let multiply = 1\r\n\r\n  // buffer\r\n  while (sampleRate < 22050) {\r\n    const newSample = new Int16Array(sample.length * 2)\r\n    for (let i = 0, j = 0, il = sample.length; i < il; ++i) {\r\n      newSample[j++] = sample[i]\r\n      newSample[j++] = sample[i]\r\n    }\r\n    sample = newSample\r\n    multiply *= 2\r\n    sampleRate *= 2\r\n  }\r\n\r\n  return {\r\n    sample,\r\n    multiply\r\n  }\r\n}\r\n\r\nfunction loadSample(sampleHeader: SampleHeader[], samplingDataOffset: number, data: Uint8Array): Int16Array[] {\r\n  return sampleHeader.map(header => {\r\n    let sample = new Int16Array(new Uint8Array(data.subarray(\r\n      samplingDataOffset + header.start * 2,\r\n      samplingDataOffset + header.end   * 2\r\n    )).buffer)\r\n    if (header.sampleRate > 0) {\r\n      const adjust = adjustSampleData(sample, header.sampleRate)\r\n      sample = adjust.sample\r\n      header.sampleRate *= adjust.multiply\r\n      header.loopStart *= adjust.multiply\r\n      header.loopEnd *= adjust.multiply\r\n    }\r\n    return sample\r\n  })\r\n}","import { ParseResult } from \"./Parser\"\r\nimport { RangeValue, GeneratorList } from \"./Structs\"\r\n\r\n/**\r\n * Parser で読み込んだサウンドフォントのデータを\r\n * Synthesizer から利用しやすい形にするクラス\r\n */\r\nexport default class SoundFont {\r\n  private parsed: ParseResult\r\n\r\n  constructor(parsed: ParseResult) {\r\n    this.parsed = parsed\r\n  }\r\n\r\n  getPresetZone(presetHeaderIndex: number) {\r\n    let presetGenerators: GeneratorList[]\r\n    const presetHeader = this.parsed.presetHeaders[presetHeaderIndex]\r\n    const presetBag = this.parsed.presetZone[presetHeader.presetBagIndex]\r\n\r\n    const nextPresetHeaderIndex = presetHeaderIndex + 1\r\n    if (nextPresetHeaderIndex < this.parsed.presetHeaders.length) {\r\n      // 次の preset までのすべての generator を取得する\r\n      const nextPresetHeader = this.parsed.presetHeaders[nextPresetHeaderIndex]\r\n      const nextPresetBag = this.parsed.presetZone[nextPresetHeader.presetBagIndex]\r\n      presetGenerators = this.parsed.presetGenerators.slice(presetBag.presetGeneratorIndex, nextPresetBag.presetGeneratorIndex)\r\n    } else {\r\n      // 最後の preset だった場合は最後まで取得する\r\n      presetGenerators = this.parsed.presetGenerators.slice(presetBag.presetGeneratorIndex, this.parsed.presetGenerators.length)\r\n    }\r\n\r\n    return presetGenerators\r\n  }\r\n\r\n  getInstrumentZone(instrumentZoneIndex: number) {\r\n    const instrumentBag = this.parsed.instrumentZone[instrumentZoneIndex]\r\n    const nextInstrumentBag = this.parsed.instrumentZone[instrumentZoneIndex + 1]\r\n    const generatorIndex = instrumentBag.instrumentGeneratorIndex\r\n    const nextGeneratorIndex = nextInstrumentBag ? nextInstrumentBag.instrumentGeneratorIndex : this.parsed.instrumentGenerators.length\r\n    const generators = this.parsed.instrumentGenerators.slice(generatorIndex, nextGeneratorIndex)\r\n    return createInstrumentZone(generators)\r\n  }\r\n\r\n  getInstrumentZoneIndexes(instrumentID: number): number[] {\r\n    const instrument = this.parsed.instruments[instrumentID]\r\n    const nextInstrument = this.parsed.instruments[instrumentID + 1]\r\n    return arrayRange(instrument.instrumentBagIndex, nextInstrument ? nextInstrument.instrumentBagIndex : this.parsed.instrumentZone.length)\r\n  }\r\n\r\n  getInstrumentKey(bankNumber, instrumentNumber, key, velocity = 100): NoteInfo | null {\r\n    const presetHeaderIndex = this.parsed.presetHeaders.findIndex(p => p.preset === instrumentNumber && p.bank === bankNumber)\r\n\r\n    if (presetHeaderIndex < 0) {\r\n      console.warn(\"preset not found: bank=%s instrument=%s\", bankNumber, instrumentNumber)\r\n      return null\r\n    }\r\n\r\n    const presetGenerators = this.getPresetZone(presetHeaderIndex)\r\n\r\n    // Last Preset Generator must be instrument\r\n    const lastPresetGenertor = presetGenerators[presetGenerators.length - 1]\r\n    if (lastPresetGenertor.type !== \"instrument\" || isNaN(Number(lastPresetGenertor.value))) {\r\n      throw new Error(\"Invalid SoundFont: invalid preset generator: expect instrument\")\r\n    }\r\n    const instrumentID = lastPresetGenertor.value as number\r\n    const instrumentZones = this.getInstrumentZoneIndexes(instrumentID).map(i => this.getInstrumentZone(i))\r\n\r\n    // 最初のゾーンがsampleID を持たなければ global instrument zone\r\n    let globalInstrumentZone: any | undefined\r\n    const firstInstrumentZone = instrumentZones[0]\r\n    if (firstInstrumentZone.sampleID === undefined) {\r\n      globalInstrumentZone = instrumentZones[0]\r\n    }\r\n\r\n    // keyRange と velRange がマッチしている Generator を探す\r\n    const instrumentZone = instrumentZones.find(i => {\r\n      if (i === globalInstrumentZone) {\r\n        return false // global zone を除外\r\n      }\r\n\r\n      let isInKeyRange = false\r\n      if (i.keyRange) {\r\n        isInKeyRange = key >= i.keyRange.lo && key <= i.keyRange.hi\r\n      }\r\n\r\n      let isInVelRange = true\r\n      if (i.velRange) {\r\n        isInVelRange = velocity >= i.velRange.lo && velocity <= i.velRange.hi\r\n      }\r\n\r\n      return isInKeyRange && isInVelRange\r\n    })\r\n\r\n    if (!instrumentZone) {\r\n      console.warn(\"instrument not found: bank=%s instrument=%s\", bankNumber, instrumentNumber)\r\n      return null\r\n    }\r\n\r\n    if (instrumentZone.sampleID === undefined) {\r\n      throw new Error(\"Invalid SoundFont: sampleID not found\")\r\n    }\r\n\r\n    const gen = { ...defaultInstrumentZone, ...removeUndefined(globalInstrumentZone || {}), ...removeUndefined(instrumentZone) }\r\n\r\n    const sample = this.parsed.samples[gen.sampleID!]\r\n    const sampleHeader = this.parsed.sampleHeaders[gen.sampleID!]\r\n    const tune = gen.coarseTune + gen.fineTune / 100\r\n    const basePitch = tune + (sampleHeader.pitchCorrection / 100) - (gen.overridingRootKey || sampleHeader.originalPitch)\r\n    const scaleTuning = gen.scaleTuning / 100\r\n\r\n    return {\r\n      sample,\r\n      sampleRate: sampleHeader.sampleRate,\r\n      sampleName: sampleHeader.sampleName,\r\n      sampleModes: gen.sampleModes,\r\n      playbackRate: (key) => Math.pow(Math.pow(2, 1 / 12), (key + basePitch) * scaleTuning),\r\n      modEnvToPitch: gen.modEnvToPitch / 100, // cent\r\n      scaleTuning,\r\n      start: gen.startAddrsCoarseOffset * 32768 + gen.startAddrsOffset,\r\n      end: gen.endAddrsCoarseOffset * 32768 + gen.endAddrsOffset,\r\n      loopStart: (\r\n        sampleHeader.loopStart +\r\n        gen.startloopAddrsCoarseOffset * 32768 +\r\n        gen.startloopAddrsOffset\r\n      ),\r\n      loopEnd: (\r\n        sampleHeader.loopEnd +\r\n        gen.endloopAddrsCoarseOffset * 32768 +\r\n        gen.endloopAddrsOffset\r\n      ),\r\n      volDelay: convertTime(gen.volDelay),\r\n      volAttack: convertTime(gen.volAttack),\r\n      volHold: convertTime(gen.volHold),\r\n      volDecay: convertTime(gen.volDecay),\r\n      volSustain: gen.volSustain / 1000,\r\n      volRelease: convertTime(gen.volRelease),\r\n      modDelay: convertTime(gen.modDelay),\r\n      modAttack: convertTime(gen.modAttack),\r\n      modHold: convertTime(gen.modHold),\r\n      modDecay: convertTime(gen.modDecay),\r\n      modSustain: gen.modSustain / 1000,\r\n      modRelease: convertTime(gen.modRelease),\r\n      keyRange: gen.keyRange,\r\n      velRange: gen.velRange,\r\n      initialFilterFc: gen.initialFilterFc,\r\n      modEnvToFilterFc: gen.modEnvToFilterFc, // semitone (100 cent)\r\n      initialFilterQ: gen.initialFilterQ,\r\n      initialAttenuation: gen.initialAttenuation,\r\n      freqVibLFO: gen.freqVibLFO ? convertTime(gen.freqVibLFO) * 8.176 : undefined,\r\n      pan: gen.pan,\r\n      mute: false,\r\n      releaseTime: gen.releaseTime\r\n    }\r\n  }\r\n\r\n  // presetNames[bankNumber][presetNumber] = presetName\r\n  getPresetNames() {\r\n    const bank: { [index: number]: { [index: number]: string } } = {}\r\n    this.parsed.presetHeaders.forEach(preset => {\r\n      if (!bank[preset.bank]) {\r\n        bank[preset.bank] = {}\r\n      }\r\n      bank[preset.bank][preset.preset] = preset.presetName\r\n    })\r\n    return bank\r\n  }\r\n}\r\n\r\n// value = 1200log2(sec) で表される時間を秒単位に変換する\r\nexport function convertTime(value) {\r\n  return Math.pow(2, value / 1200)\r\n}\r\n\r\nfunction removeUndefined(obj) {\r\n  const result = {}\r\n  Object.keys(obj).forEach(key => {\r\n    if (obj[key] !== undefined) {\r\n      result[key] = obj[key]\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\nfunction arrayRange(start, end) {\r\n  return Array.from({ length: end - start }, (_, k) => k + start);\r\n}\r\n\r\n// ひとつの instrument に対応する Generator の配列から使いやすくしたオブジェクトを返す\r\nfunction createInstrumentZone(instrumentGenerators: GeneratorList[]) {\r\n  function getValue(type: string): number | undefined {\r\n    const generator = instrumentGenerators.find(g => g.type === type)\r\n    if (!generator) {\r\n      return undefined\r\n    }\r\n    if (isNaN(Number(generator.value))) {\r\n      throw new Error(\"something wrong\")\r\n    }\r\n    return generator.value as number\r\n  }\r\n\r\n  // First Instrument Generator must be keyRange\r\n  const firstInstrumentGenerator = instrumentGenerators[0]\r\n  let keyRange: RangeValue | undefined\r\n  if (firstInstrumentGenerator && firstInstrumentGenerator.type === \"keyRange\") {\r\n    if (!(firstInstrumentGenerator.value instanceof RangeValue)) {\r\n      throw new Error(\"Invalid SoundFont: keyRange is not ranged value\")\r\n    }\r\n    keyRange = firstInstrumentGenerator.value as RangeValue\r\n  }\r\n\r\n  // Second Instrument Generator could be velRange\r\n  const secondInstrumentGenerator = instrumentGenerators[1]\r\n  let velRange: RangeValue | undefined\r\n  if (secondInstrumentGenerator && secondInstrumentGenerator.type === \"velRange\") {\r\n    if (!(secondInstrumentGenerator.value instanceof RangeValue)) {\r\n      throw new Error(\"Invalid SoundFont: velRange is not ranged value\")\r\n    }\r\n    velRange = secondInstrumentGenerator.value as RangeValue\r\n  }\r\n\r\n  // Last Instrument Generator must be sampleID\r\n  const lastInstrumentGenerator = instrumentGenerators[instrumentGenerators.length - 1]\r\n  let sampleID: number | undefined\r\n  if (lastInstrumentGenerator && lastInstrumentGenerator.type === \"sampleID\") {\r\n    if (isNaN(Number(lastInstrumentGenerator.value))) {\r\n      throw new Error(\"Invalid SoundFont: sampleID is not number\")\r\n    }\r\n    sampleID = lastInstrumentGenerator.value as number\r\n  }\r\n  \r\n  return {\r\n    keyRange, // あるはずだが global zone には無いかもしれない\r\n    velRange, // optional\r\n    sampleID, // global zone の場合だけない\r\n    volAttack: getValue(\"attackVolEnv\"),\r\n    volDecay: getValue(\"decayVolEnv\"),\r\n    volDelay: getValue(\"delayVolEnv\"),\r\n    volSustain: getValue(\"sustainVolEnv\"),\r\n    volRelease: getValue(\"releaseVolEnv\"),\r\n    modAttack: getValue(\"attackModEnv\"),\r\n    modDecay: getValue(\"decayModEnv\"),\r\n    modDelay: getValue(\"delayModEnv\"),\r\n    modSustain: getValue(\"sustainModEnv\"),\r\n    modRelease: getValue(\"releaseModEnv\"),\r\n    modEnvToPitch: getValue(\"modEnvToPitch\"),\r\n    modEnvToFilterFc: getValue(\"modEnvToFilterFc\"),\r\n    coarseTune: getValue(\"coarseTune\"),\r\n    fineTune: getValue(\"fineTune\"),\r\n    scaleTuning: getValue(\"scaleTuning\"),\r\n    freqVibLFO: getValue(\"freqVibLFO\"),\r\n    startAddrsOffset: getValue(\"startAddrsOffset\"),\r\n    startAddrsCoarseOffset: getValue(\"startAddrsCoarseOffset\"),\r\n    endAddrsOffset: getValue(\"endAddrsOffset\"),\r\n    endAddrsCoarseOffset: getValue(\"endAddrsCoarseOffset\"),\r\n    startloopAddrsOffset: getValue(\"startloopAddrsOffset\"),\r\n    startloopAddrsCoarseOffset: getValue(\"startloopAddrsCoarseOffset\"),\r\n    endloopAddrsOffset: getValue(\"endloopAddrsOffset\"),\r\n    initialAttenuation: getValue(\"initialAttenuation\"),\r\n    endloopAddrsCoarseOffset: getValue(\"endloopAddrsCoarseOffset\"),\r\n    overridingRootKey: getValue(\"overridingRootKey\"),\r\n    initialFilterQ: getValue(\"initialFilterQ\"),\r\n    initialFilterFc: getValue(\"initialFilterFc\"),\r\n    sampleModes: getValue(\"sampleModes\"),\r\n    pan: getValue(\"pan\")\r\n  }\r\n}\r\n\r\nconst defaultInstrumentZone = {\r\n  keyRange: new RangeValue(0, 127),\r\n  velRange: new RangeValue(0, 127),\r\n  sampleID: undefined,\r\n  volDelay: -12000,\r\n  volAttack: -12000,\r\n  volDecay: -12000,\r\n  volHold: -12000,\r\n  volSustain: 0,\r\n  volRelease: -12000,\r\n  modDelay: -12000,\r\n  modAttack: -12000,\r\n  modHold: -12000,\r\n  modDecay: -12000,\r\n  modSustain: 0,\r\n  modRelease: -12000,\r\n  modEnvToPitch: 0,\r\n  modEnvToFilterFc: 0,\r\n  coarseTune: 0,\r\n  fineTune: 0,\r\n  scaleTuning: 100,\r\n  freqVibLFO: 0,\r\n  startAddrsOffset: 0,\r\n  startAddrsCoarseOffset: 0,\r\n  endAddrsOffset: 0,\r\n  endAddrsCoarseOffset: 0,\r\n  startloopAddrsOffset: 0,\r\n  startloopAddrsCoarseOffset: 0,\r\n  initialAttenuation: 0,\r\n  endloopAddrsOffset: 0,\r\n  endloopAddrsCoarseOffset: 0,\r\n  overridingRootKey: undefined,\r\n  initialFilterQ: 1,\r\n  initialFilterFc: 13500,\r\n  sampleModes: 0,\r\n  mute: false,\r\n  releaseTime: 64,\r\n  pan: undefined\r\n}\r\n\r\nexport interface NoteInfo {\r\n  sample: Int16Array\r\n  sampleRate: number\r\n  sampleName: string\r\n  sampleModes: number\r\n  playbackRate: Function\r\n  modEnvToPitch: number\r\n  scaleTuning: number\r\n  start: number\r\n  end: number\r\n  loopStart: number\r\n  loopEnd: number\r\n  volDelay: number\r\n  volAttack: number\r\n  volHold: number\r\n  volDecay: number\r\n  volSustain: number\r\n  volRelease: number\r\n  modDelay: number\r\n  modAttack: number\r\n  modHold: number\r\n  modDecay: number\r\n  modSustain: number\r\n  modRelease: number\r\n  initialFilterFc: number\r\n  modEnvToFilterFc: number\r\n  initialFilterQ: number\r\n  initialAttenuation: number\r\n  freqVibLFO: number | undefined\r\n  mute: boolean\r\n  releaseTime: number\r\n  pan: number | undefined\r\n  keyRange: RangeValue\r\n  velRange: RangeValue | undefined\r\n}\r\n"],"names":["parseChunk"],"mappings":"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"}