(function(){/*
 sf2synth.js v0.3.1 | imaya / GREE Inc. / Logue | license: MIT */
'use strict';(function(m,e){"object"===typeof exports&&"object"===typeof module?module.exports=e():"function"===typeof define&&define.amd?define("SoundFont",[],e):"object"===typeof exports?exports.SoundFont=e():m.SoundFont=e()})("undefined"!==typeof self?self:this,function(){return function(m){function e(d){if(h[d])return h[d].exports;var f=h[d]={i:d,l:!1,exports:{}};m[d].call(f.exports,f,f.exports,e);f.l=!0;return f.exports}var h={};e.m=m;e.c=h;e.d=function(d,f,a){e.o(d,f)||Object.defineProperty(d,
f,{enumerable:!0,get:a})};e.r=function(d){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(d,Symbol.toStringTag,{value:"Module"});Object.defineProperty(d,"__esModule",{value:!0})};e.t=function(d,f){f&1&&(d=e(d));if(f&8||f&4&&"object"===typeof d&&d&&d.__esModule)return d;var a=Object.create(null);e.r(a);Object.defineProperty(a,"default",{enumerable:!0,value:d});if(f&2&&"string"!=typeof d)for(var b in d)e.d(a,b,function(a){return d[a]}.bind(null,b));return a};e.n=function(d){var f=
d&&d.__esModule?function(){return d["default"]}:function(){return d};e.d(f,"a",f);return f};e.o=function(d,e){return Object.prototype.hasOwnProperty.call(d,e)};e.p="";return e(e.s=1)}([function(m,e,h){h.d(e,"a",function(){return d});class d{constructor(a,b={}){this.input=a;this.ip=b.index||0;this.length=b.length||a.length-this.ip;this.offset=this.ip;this.padding=void 0!==b.padding?b.padding:!0;this.bigEndian=void 0!==b.bigEndian?b.bigEndian:!1}parse(){const a=this.length+this.offset;for(this.chunkList=
[];this.ip<a;)this.parseChunk()}parseChunk(){var a=this.input;let b=this.ip;this.chunkList.push(new f(String.fromCharCode(a[b++],a[b++],a[b++],a[b++]),a=this.bigEndian?(a[b++]<<24|a[b++]<<16|a[b++]<<8|a[b++])>>>0:(a[b++]|a[b++]<<8|a[b++]<<16|a[b++]<<24)>>>0,b));b+=a;this.padding&&1===(b-this.offset&1)&&b++;this.ip=b}getChunk(a){a=this.chunkList[a];return void 0===a?null:a}getNumberOfChunks(){return this.chunkList.length}}class f{constructor(a,b,c){this.type=a;this.size=b;this.offset=c}}},function(m,
e,h){h.r(e);h.d(e,"Parser",function(){return f});var d=h(0);class f{constructor(a,b={}){this.input=a;this.parserOption=b.parserOption;this.sampleRate=b.sampleRate||22050;this.GeneratorEnumeratorTable=["startAddrsOffset","endAddrsOffset","startloopAddrsOffset","endloopAddrsOffset","startAddrsCoarseOffset","modLfoToPitch","vibLfoToPitch","modEnvToPitch","initialFilterFc","initialFilterQ","modLfoToFilterFc","modEnvToFilterFc","endAddrsCoarseOffset","modLfoToVolume",,"chorusEffectsSend","reverbEffectsSend",
"pan",,,,"delayModLFO","freqModLFO","delayVibLFO","freqVibLFO","delayModEnv","attackModEnv","holdModEnv","decayModEnv","sustainModEnv","releaseModEnv","keynumToModEnvHold","keynumToModEnvDecay","delayVolEnv","attackVolEnv","holdVolEnv","decayVolEnv","sustainVolEnv","releaseVolEnv","keynumToVolEnvHold","keynumToVolEnvDecay","instrument",,"keyRange","velRange","startloopAddrsCoarseOffset","keynum","velocity","initialAttenuation",,"endloopAddrsCoarseOffset","coarseTune","fineTune","sampleID","sampleModes",
,"scaleTuning","exclusiveClass","overridingRootKey","endOper"]}parse(){var a=new d.a(this.input,this.parserOption);a.parse();if(1!==a.chunkList.length)throw Error("wrong chunk length");a=a.getChunk(0);if(null===a)throw Error("chunk not found");this.parseRiffChunk(a);this.input=null}parseRiffChunk(a){const b=this.input;let c=a.offset;if("RIFF"!==a.type)throw Error("invalid chunk type:"+a.type);const g=String.fromCharCode(b[c++],b[c++],b[c++],b[c++]);if("sfbk"!==g)throw Error("invalid signature:"+g);
a=new d.a(b,{index:c,length:a.size-4});a.parse();if(3!==a.getNumberOfChunks())throw Error("invalid sfbk structure");this.parseInfoList(a.getChunk(0));this.parseSdtaList(a.getChunk(1));this.parsePdtaList(a.getChunk(2))}parseInfoList(a){const b=this.input;let c=a.offset;if("LIST"!==a.type)throw Error("invalid chunk type:"+a.type);const g=String.fromCharCode(b[c++],b[c++],b[c++],b[c++]);if("INFO"!==g)throw Error("invalid signature:"+g);(new d.a(b,{index:c,length:a.size-4})).parse()}parseSdtaList(a){const b=
this.input;let c=a.offset;if("LIST"!==a.type)throw Error("invalid chunk type:"+a.type);const g=String.fromCharCode(b[c++],b[c++],b[c++],b[c++]);if("sdta"!==g)throw Error("invalid signature:"+g);a=new d.a(b,{index:c,length:a.size-4});a.parse();if(1!==a.chunkList.length)throw Error("TODO");this.samplingData=a.getChunk(0)}parsePdtaList(a){const b=this.input;let c=a.offset;if("LIST"!==a.type)throw Error("invalid chunk type:"+a.type);const g=String.fromCharCode(b[c++],b[c++],b[c++],b[c++]);if("pdta"!==
g)throw Error("invalid signature:"+g);a=new d.a(b,{index:c,length:a.size-4});a.parse();if(9!==a.getNumberOfChunks())throw Error("invalid pdta chunk");this.parsePhdr(a.getChunk(0));this.parsePbag(a.getChunk(1));this.parsePmod(a.getChunk(2));this.parsePgen(a.getChunk(3));this.parseInst(a.getChunk(4));this.parseIbag(a.getChunk(5));this.parseImod(a.getChunk(6));this.parseIgen(a.getChunk(7));this.parseShdr(a.getChunk(8))}parsePhdr(a){const b=this.input;let c=a.offset;const g=this.presetHeader=[],p=a.offset+
a.size;if("phdr"!==a.type)throw Error("invalid chunk type:"+a.type);for(;c<p;)g.push({presetName:String.fromCharCode.apply(null,b.subarray(c,c+=20)),preset:b[c++]|b[c++]<<8,bank:b[c++]|b[c++]<<8,presetBagIndex:b[c++]|b[c++]<<8,library:(b[c++]|b[c++]<<8|b[c++]<<16|b[c++]<<24)>>>0,genre:(b[c++]|b[c++]<<8|b[c++]<<16|b[c++]<<24)>>>0,morphology:(b[c++]|b[c++]<<8|b[c++]<<16|b[c++]<<24)>>>0})}parsePbag(a){const b=this.input;let c=a.offset;const g=this.presetZone=[],p=a.offset+a.size;if("pbag"!==a.type)throw Error("invalid chunk type:"+
a.type);for(;c<p;)g.push({presetGeneratorIndex:b[c++]|b[c++]<<8,presetModulatorIndex:b[c++]|b[c++]<<8})}parsePmod(a){if("pmod"!==a.type)throw Error("invalid chunk type:"+a.type);this.presetZoneModulator=this.parseModulator(a)}parsePgen(a){if("pgen"!==a.type)throw Error("invalid chunk type:"+a.type);this.presetZoneGenerator=this.parseGenerator(a)}parseInst(a){const b=this.input;let c=a.offset;const g=this.instrument=[],p=a.offset+a.size;if("inst"!==a.type)throw Error("invalid chunk type:"+a.type);
for(;c<p;)g.push({instrumentName:String.fromCharCode.apply(null,b.subarray(c,c+=20)),instrumentBagIndex:b[c++]|b[c++]<<8})}parseIbag(a){const b=this.input;let c=a.offset;const g=this.instrumentZone=[],p=a.offset+a.size;if("ibag"!==a.type)throw Error("invalid chunk type:"+a.type);for(;c<p;)g.push({instrumentGeneratorIndex:b[c++]|b[c++]<<8,instrumentModulatorIndex:b[c++]|b[c++]<<8})}parseImod(a){if("imod"!==a.type)throw Error("invalid chunk type:"+a.type);this.instrumentZoneModulator=this.parseModulator(a)}parseIgen(a){if("igen"!==
a.type)throw Error("invalid chunk type:"+a.type);this.instrumentZoneGenerator=this.parseGenerator(a)}parseShdr(a){const b=this.input;let c=a.offset;const g=this.sample=[],p=this.sampleHeader=[],d=a.offset+a.size;let e,f,n,l,h,m,q,r,t;if("shdr"!==a.type)throw Error("invalid chunk type:"+a.type);for(;c<d;){a=String.fromCharCode.apply(null,b.subarray(c,c+=20));e=(b[c++]<<0|b[c++]<<8|b[c++]<<16|b[c++]<<24)>>>0;f=(b[c++]<<0|b[c++]<<8|b[c++]<<16|b[c++]<<24)>>>0;n=(b[c++]<<0|b[c++]<<8|b[c++]<<16|b[c++]<<
24)>>>0;l=(b[c++]<<0|b[c++]<<8|b[c++]<<16|b[c++]<<24)>>>0;h=(b[c++]<<0|b[c++]<<8|b[c++]<<16|b[c++]<<24)>>>0;m=b[c++];q=b[c++]<<24>>24;r=b[c++]|b[c++]<<8;t=b[c++]|b[c++]<<8;let d=new Int16Array((new Uint8Array(b.subarray(this.samplingData.offset+2*e,this.samplingData.offset+2*f))).buffer);n-=e;l-=e;if(0<h){const a=this.adjustSampleData(d,h);d=a.sample;h*=a.multiply;n*=a.multiply;l*=a.multiply}g.push(d);p.push({sampleName:a,start:e,end:f,startLoop:n,endLoop:l,sampleRate:h,originalPitch:m,pitchCorrection:q,
sampleLink:r,sampleType:t})}}adjustSampleData(a,b){let c,g,d,e,f=1;for(;b<this.sampleRate;){c=new Int16Array(2*a.length);g=e=0;for(d=a.length;g<d;++g)c[e++]=a[g],c[e++]=a[g];a=c;f*=2;b*=2}return{sample:a,multiply:f}}parseModulator(a){const b=this.input;let c=a.offset;a=a.offset+a.size;let d,e;const k=[];for(;c<a;){c+=2;d=b[c++]|b[c++]<<8;e=this.GeneratorEnumeratorTable[d];if(void 0===e)k.push({type:e,value:{code:d,amount:b[c]|b[c+1]<<8<<16>>16,lo:b[c++],hi:b[c++]}});else switch(e){case "keyRange":case "velRange":case "keynum":case "velocity":k.push({type:e,
value:{lo:b[c++],hi:b[c++]}});break;default:k.push({type:e,value:{amount:b[c++]|b[c++]<<8<<16>>16}})}c+=2;c+=2}return k}parseGenerator(a){const b=this.input;let c=a.offset;a=a.offset+a.size;let d,e;const k=[];for(;c<a;)if(d=b[c++]|b[c++]<<8,e=this.GeneratorEnumeratorTable[d],void 0===e)k.push({type:e,value:{code:d,amount:b[c]|b[c+1]<<8<<16>>16,lo:b[c++],hi:b[c++]}});else switch(e){case "keynum":case "keyRange":case "velRange":case "velocity":k.push({type:e,value:{lo:b[c++],hi:b[c++]}});break;default:k.push({type:e,
value:{amount:b[c++]|b[c++]<<8<<16>>16}})}return k}createInstrument(){const a=this.instrument,b=this.instrumentZone,c=[];let d,e,k,f,h;k=0;for(f=a.length;k<f;++k){var n=a[k].instrumentBagIndex;var l=a[k+1]?a[k+1].instrumentBagIndex:b.length;d=[];for(h=l;n<h;++n)l=this.createInstrumentGenerator_(b,n),e=this.createInstrumentModulator_(b,n),d.push({generator:l.generator,generatorSequence:l.generatorInfo,modulator:e.modulator,modulatorSequence:e.modulatorInfo});c.push({name:a[k].instrumentName,info:d})}return c}createPreset(){const a=
this.presetHeader,b=this.presetZone,c=[];let d;let e,f,h;f=0;for(h=a.length;f<h;++f){var m=a[f].presetBagIndex;var n=a[f+1]?a[f+1].presetBagIndex:b.length;for(d=[];m<n;++m){var l=this.createPresetGenerator_(b,m);e=this.createPresetModulator_(b,m);d.push({generator:l.generator,generatorSequence:l.generatorInfo,modulator:e.modulator,modulatorSequence:e.modulatorInfo});l=void 0!==l.generator.instrument?l.generator.instrument.amount:void 0!==e.modulator.instrument?e.modulator.instrument.amount:null}c.push({name:a[f].presetName,
info:d,header:a[f],instrument:l})}return c}createInstrumentGenerator_(a,b){a=this.createBagModGen_(a,a[b].instrumentGeneratorIndex,a[b+1]?a[b+1].instrumentGeneratorIndex:this.instrumentZoneGenerator.length,this.instrumentZoneGenerator);return{generator:a.modgen,generatorInfo:a.modgenInfo}}createInstrumentModulator_(a,b){a=this.createBagModGen_(a,a[b].presetModulatorIndex,a[b+1]?a[b+1].instrumentModulatorIndex:this.instrumentZoneModulator.length,this.instrumentZoneModulator);return{modulator:a.modgen,
modulatorInfo:a.modgenInfo}}createPresetGenerator_(a,b){a=this.createBagModGen_(a,a[b].presetGeneratorIndex,a[b+1]?a[b+1].presetGeneratorIndex:this.presetZoneGenerator.length,this.presetZoneGenerator);return{generator:a.modgen,generatorInfo:a.modgenInfo}}createPresetModulator_(a,b){a=this.createBagModGen_(a,a[b].presetModulatorIndex,a[b+1]?a[b+1].presetModulatorIndex:this.presetZoneModulator.length,this.presetZoneModulator);return{modulator:a.modgen,modulatorInfo:a.modgenInfo}}createBagModGen_(a,
b,c,e){a=[];const d={unknown:[],keyRange:{hi:127,lo:0}};let f;for(f=b;f<c;++f)b=e[f],a.push(b),"unknown"===b.type?d.unknown.push(b.value):d[b.type]=b.value;return{modgen:d,modgenInfo:a}}}e["default"]=f}])});}).call(this || window)
