/** @license sf2synth.js 2013 - imaya / GREE Inc. [ https://github.com/gree/sf2synth.js ] The MIT License */(function() {'use strict';var k=this;function l(g,e){var b=g.split("."),a=k;b[0]in a||!a.execScript||a.execScript("var "+b[0]);for(var d;b.length&&(d=b.shift());)b.length||void 0===e?a=a[d]?a[d]:a[d]={}:a[d]=e};function s(g,e){e=e||{};this.input=g;this.b=e.index||0;this.length=e.length||g.length-this.b;this.offset=this.b;this.padding=void 0!==e.padding?e.padding:!0;this.g=void 0!==e.bigEndian?e.bigEndian:!1}function v(g,e,b){this.type=g;this.size=e;this.offset=b}
s.prototype.parse=function(){var g=this.length+this.offset;for(this.a=[];this.b<g;){var e=this.input,b=this.b,a=void 0;this.a.push(new v(String.fromCharCode(e[b++],e[b++],e[b++],e[b++]),a=this.g?(e[b++]<<24|e[b++]<<16|e[b++]<<8|e[b++])>>>0:(e[b++]|e[b++]<<8|e[b++]<<16|e[b++]<<24)>>>0,b));b+=a;this.padding&&1===(b-this.offset&1)&&b++;this.b=b}};function w(g,e){var b=g.a[e];return void 0===b?null:b};function x(g,e){e=e||{};this.input=g;this.h=e.parserOption}
x.prototype.parse=function(){var g,e,b=new s(this.input,this.h);b.parse();if(1!==b.a.length)throw Error("wrong chunk length");b=w(b,0);if(null===b)throw Error("chunk not found");var a=this.input,d=b.offset,c;if("RIFF"!==b.type)throw Error("invalid chunk type:"+b.type);c=String.fromCharCode(a[d++],a[d++],a[d++],a[d++]);if("sfbk"!==c)throw Error("invalid signature:"+c);b=new s(a,{index:d,length:b.size-4});b.parse();if(3!==b.a.length)throw Error("invalid sfbk structure");a=w(b,0);d=this.input;c=a.offset;
var f;if("LIST"!==a.type)throw Error("invalid chunk type:"+a.type);f=String.fromCharCode(d[c++],d[c++],d[c++],d[c++]);if("INFO"!==f)throw Error("invalid signature:"+f);(new s(d,{index:c,length:a.size-4})).parse();a=w(b,1);d=this.input;c=a.offset;if("LIST"!==a.type)throw Error("invalid chunk type:"+a.type);f=String.fromCharCode(d[c++],d[c++],d[c++],d[c++]);if("sdta"!==f)throw Error("invalid signature:"+f);a=new s(d,{index:c,length:a.size-4});a.parse();if(1!==a.a.length)throw Error("TODO");this.f=w(a,
0);b=w(b,2);a=this.input;d=b.offset;if("LIST"!==b.type)throw Error("invalid chunk type:"+b.type);c=String.fromCharCode(a[d++],a[d++],a[d++],a[d++]);if("pdta"!==c)throw Error("invalid signature:"+c);b=new s(a,{index:d,length:b.size-4});b.parse();if(9!==b.a.length)throw Error("invalid pdta chunk");a=w(b,0);d=this.input;c=a.offset;f=[];var h=a.offset+a.size;if("phdr"!==a.type)throw Error("invalid chunk type:"+a.type);for(;c<h;)f.push({A:String.fromCharCode.apply(null,d.subarray(c,c+=20)),t:d[c++]|d[c++]<<
8,i:d[c++]|d[c++]<<8,u:d[c++]|d[c++]<<8,p:(d[c++]|d[c++]<<8|d[c++]<<16|d[c++]<<24)>>>0,k:(d[c++]|d[c++]<<8|d[c++]<<16|d[c++]<<24)>>>0,q:(d[c++]|d[c++]<<8|d[c++]<<16|d[c++]<<24)>>>0});a=w(b,1);d=this.input;c=a.offset;f=[];h=a.offset+a.size;if("pbag"!==a.type)throw Error("invalid chunk type:"+a.type);for(;c<h;)f.push({v:d[c++]|d[c++]<<8,w:d[c++]|d[c++]<<8});a=w(b,2);if("pmod"!==a.type)throw Error("invalid chunk type:"+a.type);D(this,a);a=w(b,3);if("pgen"!==a.type)throw Error("invalid chunk type:"+a.type);
E(this,a);a=w(b,4);d=this.input;c=a.offset;f=[];h=a.offset+a.size;if("inst"!==a.type)throw Error("invalid chunk type:"+a.type);for(;c<h;)f.push({o:String.fromCharCode.apply(null,d.subarray(c,c+=20)),l:d[c++]|d[c++]<<8});a=w(b,5);d=this.input;c=a.offset;f=[];h=a.offset+a.size;if("ibag"!==a.type)throw Error("invalid chunk type:"+a.type);for(;c<h;)f.push({m:d[c++]|d[c++]<<8,n:d[c++]|d[c++]<<8});a=w(b,6);if("imod"!==a.type)throw Error("invalid chunk type:"+a.type);D(this,a);a=w(b,7);if("igen"!==a.type)throw Error("invalid chunk type:"+
a.type);E(this,a);h=w(b,8);b=this.input;a=h.offset;d=[];c=[];f=h.offset+h.size;var m,n,p,y,z,A,B;if("shdr"!==h.type)throw Error("invalid chunk type:"+h.type);for(;a<f;){h=String.fromCharCode.apply(null,b.subarray(a,a+=20));e=(b[a++]<<0|b[a++]<<8|b[a++]<<16|b[a++]<<24)>>>0;g=(b[a++]<<0|b[a++]<<8|b[a++]<<16|b[a++]<<24)>>>0;m=(b[a++]<<0|b[a++]<<8|b[a++]<<16|b[a++]<<24)>>>0;n=(b[a++]<<0|b[a++]<<8|b[a++]<<16|b[a++]<<24)>>>0;p=(b[a++]<<0|b[a++]<<8|b[a++]<<16|b[a++]<<24)>>>0;y=b[a++];z=b[a++]<<24>>24;A=
b[a++]|b[a++]<<8;B=b[a++]|b[a++]<<8;g=new Int16Array((new Uint8Array(b.subarray(this.f.offset+2*e,this.f.offset+2*g))).buffer);m-=e;n-=e;if(0<p){var t=p,r=void 0,q=void 0,C=void 0,u=void 0;for(e=1;22050>t;){r=new Int16Array(2*g.length);q=u=0;for(C=g.length;q<C;++q)r[u++]=g[q],r[u++]=g[q];g=r;e*=2;t*=2}p*=e;m*=e;n*=e}d.push(g);c.push({C:h,F:m,j:n,sampleRate:p,r:y,s:z,B:A,D:B})}this.input=null};
function D(g,e){for(var b=g.input,a=e.offset,d=e.offset+e.size,c,f,h=[];a<d;){a+=2;c=b[a++]|b[a++]<<8;f=F[c];if(void 0===f)h.push({type:f,value:{code:c,c:b[a]|b[a+1]<<8<<16>>16,e:b[a++],d:b[a++]}});else switch(f){case "keyRange":case "velRange":case "keynum":case "velocity":h.push({type:f,value:{e:b[a++],d:b[a++]}});break;default:h.push({type:f,value:{c:b[a++]|b[a++]<<8<<16>>16}})}a+=2;a+=2}}
function E(g,e){for(var b=g.input,a=e.offset,d=e.offset+e.size,c,f,h=[];a<d;)if(c=b[a++]|b[a++]<<8,f=F[c],void 0===f)h.push({type:f,value:{code:c,c:b[a]|b[a+1]<<8<<16>>16,e:b[a++],d:b[a++]}});else switch(f){case "keynum":case "keyRange":case "velRange":case "velocity":h.push({type:f,value:{e:b[a++],d:b[a++]}});break;default:h.push({type:f,value:{c:b[a++]|b[a++]<<8<<16>>16}})}}
var F=["startAddrsOffset","endAddrsOffset","startloopAddrsOffset","endloopAddrsOffset","startAddrsCoarseOffset","modLfoToPitch","vibLfoToPitch","modEnvToPitch","initialFilterFc","initialFilterQ","modLfoToFilterFc","modEnvToFilterFc","endAddrsCoarseOffset","modLfoToVolume",,"chorusEffectsSend","reverbEffectsSend","pan",,,,"delayModLFO","freqModLFO","delayVibLFO","freqVibLFO","delayModEnv","attackModEnv","holdModEnv","decayModEnv","sustainModEnv","releaseModEnv","keynumToModEnvHold","keynumToModEnvDecay",
"delayVolEnv","attackVolEnv","holdVolEnv","decayVolEnv","sustainVolEnv","releaseVolEnv","keynumToVolEnvHold","keynumToVolEnvDecay","instrument",,"keyRange","velRange","startloopAddrsCoarseOffset","keynum","velocity","initialAttenuation",,"endloopAddrsCoarseOffset","coarseTune","fineTune","sampleID","sampleModes",,"scaleTuning","exclusiveClass","overridingRootKey"];l("SoundFont.Parser",x);l("SoundFont.Parser.prototype.parse",x.prototype.parse);}).call(this); //@ sourceMappingURL=sf2.parser.min.js.map
